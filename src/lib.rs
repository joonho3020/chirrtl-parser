mod lexer;
mod ast;
use lalrpop_util::lalrpop_mod;
lalrpop_mod!(pub firrtl);



pub type Int = i128;





#[cfg(test)]
mod lexer_test {
    use crate::lexer::*;

    fn run(source: &str) {
        let mut lex = FIRRTLLexer::new(source);
        while let Some(ts) = lex.next_token() {
            println!("{:?}", ts);
            match ts.token {
                Token::Error => {
                    println!("{:?}", ts);
                    panic!("Got a error token");
                }
                _ => { }
            }
        }
    }

    #[test]
    fn gcd() {
        let source =
r#"FIRRTL version 3.3.0
circuit GCD :
  module GCD : @[src/main/scala/gcd/GCD.scala 15:7]
    input clock : Clock @[src/main/scala/gcd/GCD.scala 15:7]
    input reset : UInt<1> @[src/main/scala/gcd/GCD.scala 15:7]
    output io : { flip value1 : UInt<16>, flip value2 : UInt<16>, flip loadingValues : UInt<1>, outputGCD : UInt<16>, outputValid : UInt<1>} @[src/main/scala/gcd/GCD.scala 16:14]

    reg x : UInt, clock @[src/main/scala/gcd/GCD.scala 24:15]
    reg y : UInt, clock @[src/main/scala/gcd/GCD.scala 25:15]
    node _T = gt(x, y) @[src/main/scala/gcd/GCD.scala 27:10]
    when _T : @[src/main/scala/gcd/GCD.scala 27:15]
      node _x_T = sub(x, y) @[src/main/scala/gcd/GCD.scala 27:24]
      node _x_T_1 = tail(_x_T, 1) @[src/main/scala/gcd/GCD.scala 27:24]
      connect x, _x_T_1 @[src/main/scala/gcd/GCD.scala 27:19]
    else :
      node _y_T = sub(y, x) @[src/main/scala/gcd/GCD.scala 28:25]
      node _y_T_1 = tail(_y_T, 1) @[src/main/scala/gcd/GCD.scala 28:25]
      connect y, _y_T_1 @[src/main/scala/gcd/GCD.scala 28:20]
    when io.loadingValues : @[src/main/scala/gcd/GCD.scala 30:26]
      connect x, io.value1 @[src/main/scala/gcd/GCD.scala 31:7]
      connect y, io.value2 @[src/main/scala/gcd/GCD.scala 32:7]
    connect io.outputGCD, x @[src/main/scala/gcd/GCD.scala 35:16]
    node _io_outputValid_T = eq(y, UInt<1>(0h0)) @[src/main/scala/gcd/GCD.scala 36:23]
    connect io.outputValid, _io_outputValid_T @[src/main/scala/gcd/GCD.scala 36:18]
"#;

        run(source);
    }

    #[test]
    fn one_read_one_write_sram() {
        let source =
r#"FIRRTL version 3.3.0
circuit OneReadOneWritePortSRAM :
  module OneReadOneWritePortSRAM : @[src/main/scala/gcd/SRAM.scala 10:7]
    input clock : Clock @[src/main/scala/gcd/SRAM.scala 10:7]
    input reset : UInt<1> @[src/main/scala/gcd/SRAM.scala 10:7]
    output io : { flip ren : UInt<1>, flip raddr : UInt<3>, rdata : UInt<2>[4], flip wen : UInt<1>, flip waddr : UInt<3>, flip wdata : UInt<2>[4], flip wmask : UInt<1>[4]} @[src/main/scala/gcd/SRAM.scala 11:14]

    smem mem : UInt<2>[4] [8] @[src/main/scala/gcd/SRAM.scala 22:24]
    when io.wen : @[src/main/scala/gcd/SRAM.scala 23:17]
      write mport MPORT = mem[io.waddr], clock @[src/main/scala/gcd/SRAM.scala 24:14]
      when io.wmask[0] : @[src/main/scala/gcd/SRAM.scala 24:14]
        connect MPORT[0], io.wdata[0] @[src/main/scala/gcd/SRAM.scala 24:14]
      when io.wmask[1] : @[src/main/scala/gcd/SRAM.scala 24:14]
        connect MPORT[1], io.wdata[1] @[src/main/scala/gcd/SRAM.scala 24:14]
      when io.wmask[2] : @[src/main/scala/gcd/SRAM.scala 24:14]
        connect MPORT[2], io.wdata[2] @[src/main/scala/gcd/SRAM.scala 24:14]
      when io.wmask[3] : @[src/main/scala/gcd/SRAM.scala 24:14]
        connect MPORT[3], io.wdata[3] @[src/main/scala/gcd/SRAM.scala 24:14]
    wire _WIRE : UInt<3> @[src/main/scala/gcd/SRAM.scala 26:23]
    invalidate _WIRE @[src/main/scala/gcd/SRAM.scala 26:23]
    when io.ren : @[src/main/scala/gcd/SRAM.scala 26:23]
      connect _WIRE, io.raddr @[src/main/scala/gcd/SRAM.scala 26:23]
      read mport MPORT_1 = mem[_WIRE], clock @[src/main/scala/gcd/SRAM.scala 26:23]
    connect io.rdata, MPORT_1 @[src/main/scala/gcd/SRAM.scala 26:12]
    "#;

        run(source);
    }

    #[test]
    fn ports_2() {
        let source = r#"output io : { flip a : UInt<2>, flip b : UInt<2>, flip c : UInt<2>, flip sel : UInt<2>, output : UInt<2>}"#;
        run(source);
    }

    #[test]
    fn extmodule() {
        let source =
r#"extmodule plusarg_reader : @[generators/rocket-chip/src/main/scala/util/PlusArg.scala 45:7]
     output out : UInt<32>
     defname = plusarg_reader
     parameter DEFAULT = 0
     parameter FORMAT = "tilelink_timeout=%d"
     parameter WIDTH = 32"#;
        run(source);
    }

    #[test]
    fn stmts() {
        let source =
r#"reg x : UInt, clock @[src/main/scala/gcd/GCD.scala 24:15]
reg y : UInt, clock @[src/main/scala/gcd/GCD.scala 25:15]
node _T = gt(x, y) @[src/main/scala/gcd/GCD.scala 27:10]
when _T : @[src/main/scala/gcd/GCD.scala 27:15]
  node _x_T = sub(x, y) @[src/main/scala/gcd/GCD.scala 27:24]
  node _x_T_1 = tail(_x_T, 1) @[src/main/scala/gcd/GCD.scala 27:24]
  connect x, _x_T_1 @[src/main/scala/gcd/GCD.scala 27:19]
else :
  node _y_T = sub(y, x) @[src/main/scala/gcd/GCD.scala 28:25]
  node _y_T_1 = tail(_y_T, 1) @[src/main/scala/gcd/GCD.scala 28:25]
  connect y, _y_T_1 @[src/main/scala/gcd/GCD.scala 28:20]
when io.loadingValues : @[src/main/scala/gcd/GCD.scala 30:26]
  connect x, io.value1 @[src/main/scala/gcd/GCD.scala 31:7]
  connect y, io.value2 @[src/main/scala/gcd/GCD.scala 32:7]
"#;
        run(source);
    }

    #[test]
    fn circuit_annos() {
        let source =
r#"FIRRTL version 3.3.0
circuit GCD :%[[
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~TestHarness|IntXbar_i1_o1",
    "group":"IntXbar_i1_o1"
  }
]]
  module GCD : @[src/main/scala/gcd/GCD.scala 15:7]
    input clock : Clock @[src/main/scala/gcd/GCD.scala 15:7]
    input reset : UInt<1> @[src/main/scala/gcd/GCD.scala 15:7]
    output io : { flip value1 : UInt<16>, flip value2 : UInt<16>, flip loadingValues : UInt<1>, outputGCD : UInt<16>, outputValid : UInt<1>} @[src/main/scala/gcd/GCD.scala 16:14]

    reg x : UInt, clock @[src/main/scala/gcd/GCD.scala 24:15]
    reg y : UInt, clock @[src/main/scala/gcd/GCD.scala 25:15]
    node _T = gt(x, y) @[src/main/scala/gcd/GCD.scala 27:10]
    when _T : @[src/main/scala/gcd/GCD.scala 27:15]
      node _x_T = sub(x, y) @[src/main/scala/gcd/GCD.scala 27:24]
      node _x_T_1 = tail(_x_T, 1) @[src/main/scala/gcd/GCD.scala 27:24]
      connect x, _x_T_1 @[src/main/scala/gcd/GCD.scala 27:19]
    else :
      node _y_T = sub(y, x) @[src/main/scala/gcd/GCD.scala 28:25]
      node _y_T_1 = tail(_y_T, 1) @[src/main/scala/gcd/GCD.scala 28:25]
      connect y, _y_T_1 @[src/main/scala/gcd/GCD.scala 28:20]
    when io.loadingValues : @[src/main/scala/gcd/GCD.scala 30:26]
      connect x, io.value1 @[src/main/scala/gcd/GCD.scala 31:7]
      connect y, io.value2 @[src/main/scala/gcd/GCD.scala 32:7]
    connect io.outputGCD, x @[src/main/scala/gcd/GCD.scala 35:16]
    node _io_outputValid_T = eq(y, UInt<1>(0h0)) @[src/main/scala/gcd/GCD.scala 36:23]
    connect io.outputValid, _io_outputValid_T @[src/main/scala/gcd/GCD.scala 36:18]
"#;
        run(&source);
    }

    #[test]
    fn rocketconfig() -> Result<(), std::io::Error> {
        let source = std::fs::read_to_string("./test-inputs/chipyard.harness.TestHarness.RocketConfig.fir")?;
        run(&source);
        Ok(())
    }

    #[test]
    fn largeboomconfig() -> Result<(), std::io::Error> {
        let source = std::fs::read_to_string("./test-inputs/chipyard.harness.TestHarness.LargeBoomV3Config.fir")?;
        run(&source);
        Ok(())
    }

}



#[cfg(test)]
mod parser_test {
    use crate::lexer::*;
    use crate::firrtl::*;

    #[test]
    fn stmts() {
        let source =
r#"reg x : UInt, clock @[src/main/scala/gcd/GCD.scala 24:15]
reg y : UInt, clock @[src/main/scala/gcd/GCD.scala 25:15]
node _T = gt(x, y) @[src/main/scala/gcd/GCD.scala 27:10]
when _T : @[src/main/scala/gcd/GCD.scala 27:15]
  node _x_T = sub(x, y) @[src/main/scala/gcd/GCD.scala 27:24]
  node _x_T_1 = tail(_x_T, 1) @[src/main/scala/gcd/GCD.scala 27:24]
  connect x, _x_T_1 @[src/main/scala/gcd/GCD.scala 27:19]
else :
  node _y_T = sub(y, x) @[src/main/scala/gcd/GCD.scala 28:25]
  node _y_T_1 = tail(_y_T, 1) @[src/main/scala/gcd/GCD.scala 28:25]
  connect y, _y_T_1 @[src/main/scala/gcd/GCD.scala 28:20]
when io.loadingValues : @[src/main/scala/gcd/GCD.scala 30:26]
  connect x, io.value1 @[src/main/scala/gcd/GCD.scala 31:7]
  connect y, io.value2 @[src/main/scala/gcd/GCD.scala 32:7]
"#;
        let lexer = FIRRTLLexer::new(source);
        let parser = StmtsParser::new();
        let ast = parser.parse(lexer).unwrap();

        for stmt in ast.iter() {
            stmt.traverse();
        }
    }

    #[test]
    fn ports() {
        let source =
r#"
input clock : Clock @[src/main/scala/gcd/GCD.scala 15:7]
input reset : UInt<1> @[src/main/scala/gcd/GCD.scala 15:7]
output io : { flip value1 : UInt<16>, flip value2 : UInt<16>, flip loadingValues : UInt<1>, outputGCD : UInt<16>, outputValid : UInt<1>} @[src/main/scala/gcd/GCD.scala 16:14]
"#;
        let lexer = FIRRTLLexer::new(source);
        let parser = PortsParser::new();
        let ast = parser.parse(lexer).unwrap();
        println!("{:?}", ast);
    }

    #[test]
    fn ports_2() {
        let source = r#"output io : { flip a : UInt<2>, flip b : UInt<2>, flip c : UInt<2>, flip sel : UInt<2>, output : UInt<2>}"#;
        let lexer = FIRRTLLexer::new(source);
        let parser = PortsParser::new();
        let ast = parser.parse(lexer).unwrap();
        println!("{:?}", ast);
    }

    #[test]
    fn ports_3() {
        let source = r#"output io : { flip in : { a : { ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<5>, address : UInt<32>, user : { }, echo : { }, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}}, d : { ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<5>, sink : UInt<3>, denied : UInt<1>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}}}} @[generators/rocket-chip/src/main/scala/tilelink/Monitor.scala 20:14]"#;
        let lexer = FIRRTLLexer::new(source);
        let parser = PortsParser::new();
        let ast = parser.parse(lexer).unwrap();
        println!("{:?}", ast);
    }

    #[test]
    fn when() {
        let source =
r#"
when io.in.a.valid : @[generators/rocket-chip/src/main/scala/tilelink/Monitor.scala 372:27]
  node _T = leq(io.in.a.bits.opcode, UInt<3>(0h7)) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 42:24]
  node _T_1 = asUInt(reset) @[generators/rocket-chip/src/main/scala/tilelink/Monitor.scala 45:11]
  node _T_2 = eq(_T_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Monitor.scala 45:11]
  when _T_2 : @[generators/rocket-chip/src/main/scala/tilelink/Monitor.scala 45:11]
    node _T_3 = eq(_T, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Monitor.scala 45:11]
    when _T_3 : @[generators/rocket-chip/src/main/scala/tilelink/Monitor.scala 45:11]
      printf(clock, UInt<1>(0h1), "Assertion failed: 'A' channel has invalid opcode (connected at generators/rocket-chip/src/main/scala/subsystem/SystemBus.scala:48:55)\n    at Monitor.scala:45 assert(cond, message)\n") : printf @[generators/rocket-chip/src/main/scala/tilelink/Monitor.scala 45:11]
    assert(clock, _T, UInt<1>(0h1), "") : assert @[generators/rocket-chip/src/main/scala/tilelink/Monitor.scala 45:11]
"#;

        let lexer = FIRRTLLexer::new(source);
        let parser = StmtsParser::new();
        let ast = parser.parse(lexer).unwrap();
        println!("{:?}", ast);

    }

    #[test]
    fn module() {
        let source =
r#"
module GCD : @[src/main/scala/gcd/GCD.scala 15:7]
  input clock : Clock @[src/main/scala/gcd/GCD.scala 15:7]
  input reset : UInt<1> @[src/main/scala/gcd/GCD.scala 15:7]
  output io : { flip value1 : UInt<16>, flip value2 : UInt<16>, flip loadingValues : UInt<1>, outputGCD : UInt<16>, outputValid : UInt<1>} @[src/main/scala/gcd/GCD.scala 16:14]

  reg x : UInt, clock @[src/main/scala/gcd/GCD.scala 24:15]
  reg y : UInt, clock @[src/main/scala/gcd/GCD.scala 25:15]
  node _T = gt(x, y) @[src/main/scala/gcd/GCD.scala 27:10]
  when _T : @[src/main/scala/gcd/GCD.scala 27:15]
    node _x_T = sub(x, y) @[src/main/scala/gcd/GCD.scala 27:24]
    node _x_T_1 = tail(_x_T, 1) @[src/main/scala/gcd/GCD.scala 27:24]
    connect x, _x_T_1 @[src/main/scala/gcd/GCD.scala 27:19]
  else :
    node _y_T = sub(y, x) @[src/main/scala/gcd/GCD.scala 28:25]
    node _y_T_1 = tail(_y_T, 1) @[src/main/scala/gcd/GCD.scala 28:25]
    connect y, _y_T_1 @[src/main/scala/gcd/GCD.scala 28:20]
  when io.loadingValues : @[src/main/scala/gcd/GCD.scala 30:26]
    connect x, io.value1 @[src/main/scala/gcd/GCD.scala 31:7]
    connect y, io.value2 @[src/main/scala/gcd/GCD.scala 32:7]
  connect io.outputGCD, x @[src/main/scala/gcd/GCD.scala 35:16]
  node _io_outputValid_T = eq(y, UInt<1>(0h0)) @[src/main/scala/gcd/GCD.scala 36:23]
  connect io.outputValid, _io_outputValid_T @[src/main/scala/gcd/GCD.scala 36:18]
"#;
        let lexer = FIRRTLLexer::new(source);
        let parser = ModuleParser::new();
        let ast = parser.parse(lexer).unwrap();
        println!("{:?}", ast);
    }
    #[test]
    fn version() {
        let source = r#"FIRRTL version 3.3.0"#;
        let lexer = FIRRTLLexer::new(source);
        let parser = VersionParser::new();
        let ast = parser.parse(lexer).unwrap();
        println!("{:?}", ast);
    }

    #[test]
    fn circuit() {
        let source =
r#"FIRRTL version 3.3.0
circuit GCD :
  module GCD : @[src/main/scala/gcd/GCD.scala 15:7]
    input clock : Clock @[src/main/scala/gcd/GCD.scala 15:7]
    input reset : UInt<1> @[src/main/scala/gcd/GCD.scala 15:7]
    output io : { flip value1 : UInt<16>, flip value2 : UInt<16>, flip loadingValues : UInt<1>, outputGCD : UInt<16>, outputValid : UInt<1>} @[src/main/scala/gcd/GCD.scala 16:14]

    reg x : UInt, clock @[src/main/scala/gcd/GCD.scala 24:15]
    reg y : UInt, clock @[src/main/scala/gcd/GCD.scala 25:15]
    node _T = gt(x, y) @[src/main/scala/gcd/GCD.scala 27:10]
    when _T : @[src/main/scala/gcd/GCD.scala 27:15]
      node _x_T = sub(x, y) @[src/main/scala/gcd/GCD.scala 27:24]
      node _x_T_1 = tail(_x_T, 1) @[src/main/scala/gcd/GCD.scala 27:24]
      connect x, _x_T_1 @[src/main/scala/gcd/GCD.scala 27:19]
    else :
      node _y_T = sub(y, x) @[src/main/scala/gcd/GCD.scala 28:25]
      node _y_T_1 = tail(_y_T, 1) @[src/main/scala/gcd/GCD.scala 28:25]
      connect y, _y_T_1 @[src/main/scala/gcd/GCD.scala 28:20]
    when io.loadingValues : @[src/main/scala/gcd/GCD.scala 30:26]
      connect x, io.value1 @[src/main/scala/gcd/GCD.scala 31:7]
      connect y, io.value2 @[src/main/scala/gcd/GCD.scala 32:7]
    connect io.outputGCD, x @[src/main/scala/gcd/GCD.scala 35:16]
    node _io_outputValid_T = eq(y, UInt<1>(0h0)) @[src/main/scala/gcd/GCD.scala 36:23]
    connect io.outputValid, _io_outputValid_T @[src/main/scala/gcd/GCD.scala 36:18]
"#;
        let lexer = FIRRTLLexer::new(source);
        let parser = CircuitParser::new();
        let ast = parser.parse(lexer).unwrap();
        println!("{:?}", ast);
    }

    #[test]
    fn circuit_annos() {
        let source =
r#"FIRRTL version 3.3.0
circuit GCD :%[[
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~TestHarness|IntXbar_i1_o1",
    "group":"IntXbar_i1_o1"
  }
]]
  module GCD : @[src/main/scala/gcd/GCD.scala 15:7]
    input clock : Clock @[src/main/scala/gcd/GCD.scala 15:7]
    input reset : UInt<1> @[src/main/scala/gcd/GCD.scala 15:7]
    output io : { flip value1 : UInt<16>, flip value2 : UInt<16>, flip loadingValues : UInt<1>, outputGCD : UInt<16>, outputValid : UInt<1>} @[src/main/scala/gcd/GCD.scala 16:14]

    reg x : UInt, clock @[src/main/scala/gcd/GCD.scala 24:15]
    reg y : UInt, clock @[src/main/scala/gcd/GCD.scala 25:15]
    node _T = gt(x, y) @[src/main/scala/gcd/GCD.scala 27:10]
    when _T : @[src/main/scala/gcd/GCD.scala 27:15]
      node _x_T = sub(x, y) @[src/main/scala/gcd/GCD.scala 27:24]
      node _x_T_1 = tail(_x_T, 1) @[src/main/scala/gcd/GCD.scala 27:24]
      connect x, _x_T_1 @[src/main/scala/gcd/GCD.scala 27:19]
    else :
      node _y_T = sub(y, x) @[src/main/scala/gcd/GCD.scala 28:25]
      node _y_T_1 = tail(_y_T, 1) @[src/main/scala/gcd/GCD.scala 28:25]
      connect y, _y_T_1 @[src/main/scala/gcd/GCD.scala 28:20]
    when io.loadingValues : @[src/main/scala/gcd/GCD.scala 30:26]
      connect x, io.value1 @[src/main/scala/gcd/GCD.scala 31:7]
      connect y, io.value2 @[src/main/scala/gcd/GCD.scala 32:7]
    connect io.outputGCD, x @[src/main/scala/gcd/GCD.scala 35:16]
    node _io_outputValid_T = eq(y, UInt<1>(0h0)) @[src/main/scala/gcd/GCD.scala 36:23]
    connect io.outputValid, _io_outputValid_T @[src/main/scala/gcd/GCD.scala 36:18]
"#;
        let lexer = FIRRTLLexer::new(source);
        let parser = CircuitParser::new();
        let ast = parser.parse(lexer).unwrap();
        println!("{:?}", ast);
    }

    #[test]
    fn nested_whens() {
        let source =
r#"FIRRTL version 3.3.0
circuit NestedWhen :
  module NestedWhen : @[src/main/scala/gcd/NestedWhen.scala 8:7]
    input clock : Clock @[src/main/scala/gcd/NestedWhen.scala 8:7]
    input reset : UInt<1> @[src/main/scala/gcd/NestedWhen.scala 8:7]
    output io : { flip a : UInt<2>, flip b : UInt<2>, flip c : UInt<2>, flip sel : UInt<2>, output : UInt<2>} @[src/main/scala/gcd/NestedWhen.scala 9:14]

    node _T = eq(io.output, UInt<1>(0h0)) @[src/main/scala/gcd/NestedWhen.scala 17:19]
    when _T : @[src/main/scala/gcd/NestedWhen.scala 17:28]
      connect io.output, io.a @[src/main/scala/gcd/NestedWhen.scala 18:15]
    else :
      node _T_1 = eq(io.output, UInt<1>(0h1)) @[src/main/scala/gcd/NestedWhen.scala 19:26]
      when _T_1 : @[src/main/scala/gcd/NestedWhen.scala 19:35]
        connect io.output, io.b @[src/main/scala/gcd/NestedWhen.scala 20:15]
      else :
        connect io.output, io.c @[src/main/scala/gcd/NestedWhen.scala 22:15]

"#;
        let lexer = FIRRTLLexer::new(source);
        let parser = CircuitParser::new();
        let ast = parser.parse(lexer).unwrap();
        println!("{:?}", ast);
    }

    #[test]
    fn one_read_one_write_sram() {
        let source =
r#"FIRRTL version 3.3.0
circuit OneReadOneWritePortSRAM :
  module OneReadOneWritePortSRAM : @[src/main/scala/gcd/SRAM.scala 10:7]
    input clock : Clock @[src/main/scala/gcd/SRAM.scala 10:7]
    input reset : UInt<1> @[src/main/scala/gcd/SRAM.scala 10:7]
    output io : { flip ren : UInt<1>, flip raddr : UInt<3>, rdata : UInt<2>[4], flip wen : UInt<1>, flip waddr : UInt<3>, flip wdata : UInt<2>[4], flip wmask : UInt<1>[4]} @[src/main/scala/gcd/SRAM.scala 11:14]

    smem mem : UInt<2>[4] [8] @[src/main/scala/gcd/SRAM.scala 22:24]
    when io.wen : @[src/main/scala/gcd/SRAM.scala 23:17]
      write mport MPORT = mem[io.waddr], clock @[src/main/scala/gcd/SRAM.scala 24:14]
      when io.wmask[0] : @[src/main/scala/gcd/SRAM.scala 24:14]
        connect MPORT[0], io.wdata[0] @[src/main/scala/gcd/SRAM.scala 24:14]
      when io.wmask[1] : @[src/main/scala/gcd/SRAM.scala 24:14]
        connect MPORT[1], io.wdata[1] @[src/main/scala/gcd/SRAM.scala 24:14]
      when io.wmask[2] : @[src/main/scala/gcd/SRAM.scala 24:14]
        connect MPORT[2], io.wdata[2] @[src/main/scala/gcd/SRAM.scala 24:14]
      when io.wmask[3] : @[src/main/scala/gcd/SRAM.scala 24:14]
        connect MPORT[3], io.wdata[3] @[src/main/scala/gcd/SRAM.scala 24:14]
    wire _WIRE : UInt<3> @[src/main/scala/gcd/SRAM.scala 26:23]
    invalidate _WIRE @[src/main/scala/gcd/SRAM.scala 26:23]
    when io.ren : @[src/main/scala/gcd/SRAM.scala 26:23]
      connect _WIRE, io.raddr @[src/main/scala/gcd/SRAM.scala 26:23]
      read mport MPORT_1 = mem[_WIRE], clock @[src/main/scala/gcd/SRAM.scala 26:23]
    connect io.rdata, MPORT_1 @[src/main/scala/gcd/SRAM.scala 26:12]
    "#;

        let lexer = FIRRTLLexer::new(source);
        let parser = CircuitParser::new();
        let ast = parser.parse(lexer).unwrap();
        println!("{:?}", ast);
    }

    #[test]
    fn as_clock_stmt() {
        let source = "node _childClock_T = asClock(UInt<1>(0h0)) @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala 160:25]";
        let lexer = FIRRTLLexer::new(source);
        let parser = StmtParser::new();
        let ast = parser.parse(lexer).unwrap();
        println!("{:?}", ast);
    }

    #[test]
    fn printf_stmt() {
        let source = r#"printf(clock, UInt<1>(0h1), "Assertion failed: 'A' channel has invalid opcode (connected at generators/rocket-chip/src/main/scala/subsystem/SystemBus.scala:48:55)\n    at Monitor.scala:45 assert(cond, message)\n") : printf @[generators/rocket-chip/src/main/scala/tilelink/Monitor.scala 45:11]"#;
        let lexer = FIRRTLLexer::new(source);
        let parser = StmtParser::new();
        let ast = parser.parse(lexer).unwrap();
        println!("{:?}", ast);
    }

    #[test]
    fn empty_type() {
        let source = "output auto : { } @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala 107:25]";
        let lexer = FIRRTLLexer::new(source);
        let parser = PortParser::new();
        let ast = parser.parse(lexer).unwrap();
        println!("{:?}", ast);
    }

    #[test]
    fn extmodule() {
        let source =
r#"extmodule plusarg_reader : @[generators/rocket-chip/src/main/scala/util/PlusArg.scala 45:7]
     output out : UInt<32>
     defname = plusarg_reader
     parameter DEFAULT = 0
     parameter FORMAT = "tilelink_timeout=%d"
     parameter WIDTH = 32"#;

        let lexer = FIRRTLLexer::new(source);
        let parser = CircuitModuleParser::new();
        let ast = parser.parse(lexer).unwrap();
        println!("{:?}", ast);
    }

    #[test]
    fn tlmonitor() {
        let source = 
r#"
module TLMonitor : @[generators/rocket-chip/src/main/scala/tilelink/Monitor.scala 36:7]
  input clock : Clock @[generators/rocket-chip/src/main/scala/tilelink/Monitor.scala 36:7]
  input reset : Reset @[generators/rocket-chip/src/main/scala/tilelink/Monitor.scala 36:7]
  output io : { flip in : { a : { ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<5>, address : UInt<32>, user : { }, echo : { }, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}}, d : { ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<5>, sink : UInt<3>, denied : UInt<1>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}}}} @[generators/rocket-chip/src/main/scala/tilelink/Monitor.scala 20:14]

  when io.in.a.valid : @[generators/rocket-chip/src/main/scala/tilelink/Monitor.scala 372:27]
    node _T = leq(io.in.a.bits.opcode, UInt<3>(0h7)) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 42:24]
    node _T_1 = asUInt(reset) @[generators/rocket-chip/src/main/scala/tilelink/Monitor.scala 45:11]
    node _T_2 = eq(_T_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Monitor.scala 45:11]
    when _T_2 : @[generators/rocket-chip/src/main/scala/tilelink/Monitor.scala 45:11]
      node _T_3 = eq(_T, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Monitor.scala 45:11]
      when _T_3 : @[generators/rocket-chip/src/main/scala/tilelink/Monitor.scala 45:11]
        printf(clock, UInt<1>(0h1), "Assertion failed: 'A' channel has invalid opcode (connected at generators/rocket-chip/src/main/scala/subsystem/SystemBus.scala:48:55)\n    at Monitor.scala:45 assert(cond, message)\n") : printf @[generators/rocket-chip/src/main/scala/tilelink/Monitor.scala 45:11]
      assert(clock, _T, UInt<1>(0h1), "") : assert @[generators/rocket-chip/src/main/scala/tilelink/Monitor.scala 45:11]
    node _source_ok_T = eq(io.in.a.bits.source, UInt<5>(0h10)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 46:9]
    node _source_ok_uncommonBits_T = or(io.in.a.bits.source, UInt<2>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:29]
    node source_ok_uncommonBits = bits(_source_ok_uncommonBits_T, 1, 0) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:56]
    node _source_ok_T_1 = shr(io.in.a.bits.source, 2) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:10]
    node _source_ok_T_2 = eq(_source_ok_T_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:32]
    node _source_ok_T_3 = leq(UInt<1>(0h0), source_ok_uncommonBits) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 56:32]
    node _source_ok_T_4 = and(_source_ok_T_2, _source_ok_T_3) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:67]
    node _source_ok_T_5 = leq(source_ok_uncommonBits, UInt<2>(0h3)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 57:20]
    node _source_ok_T_6 = and(_source_ok_T_4, _source_ok_T_5) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 56:48]
    node _source_ok_uncommonBits_T_1 = or(io.in.a.bits.source, UInt<2>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:29]
    node source_ok_uncommonBits_1 = bits(_source_ok_uncommonBits_T_1, 1, 0) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:56]
    node _source_ok_T_7 = shr(io.in.a.bits.source, 2) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:10]
    node _source_ok_T_8 = eq(_source_ok_T_7, UInt<1>(0h1)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:32]
    node _source_ok_T_9 = leq(UInt<1>(0h0), source_ok_uncommonBits_1) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 56:32]
    node _source_ok_T_10 = and(_source_ok_T_8, _source_ok_T_9) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:67]
    node _source_ok_T_11 = leq(source_ok_uncommonBits_1, UInt<2>(0h3)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 57:20]
    node _source_ok_T_12 = and(_source_ok_T_10, _source_ok_T_11) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 56:48]
    node _source_ok_uncommonBits_T_2 = or(io.in.a.bits.source, UInt<2>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:29]
    node source_ok_uncommonBits_2 = bits(_source_ok_uncommonBits_T_2, 1, 0) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:56]
    node _source_ok_T_13 = shr(io.in.a.bits.source, 2) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:10]
    node _source_ok_T_14 = eq(_source_ok_T_13, UInt<2>(0h2)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:32]"#;

        let lexer = FIRRTLLexer::new(&source);
        let parser = ModuleParser::new();
        let ast = parser.parse(lexer).expect("FAILED");
    }

    #[test]
    fn tlmonitor_stmts() {
        let source =
r#"
module TLXbar_sbus_i2_o2_a32d64s6k3z4c : @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 74:9]
  input clock : Clock @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 74:9]
  input reset : Reset @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 74:9]
  output auto : { flip anon_in_1 : { a : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, user : { }, echo : { }, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}}, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}}, c : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}}, flip d : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<2>, sink : UInt<3>, denied : UInt<1>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}}, e : { flip ready : UInt<1>, valid : UInt<1>, bits : { sink : UInt<3>}}}, flip anon_in_0 : { a : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<5>, address : UInt<32>, user : { }, echo : { }, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}}, flip d : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<5>, sink : UInt<3>, denied : UInt<1>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}}}, anon_out_1 : { a : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<6>, address : UInt<32>, user : { }, echo : { }, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}}, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<6>, address : UInt<32>, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}}, c : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<6>, address : UInt<32>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}}, flip d : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<6>, sink : UInt<3>, denied : UInt<1>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}}, e : { flip ready : UInt<1>, valid : UInt<1>, bits : { sink : UInt<3>}}}, anon_out_0 : { a : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<6>, address : UInt<29>, user : { }, echo : { }, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}}, flip d : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<6>, sink : UInt<1>, denied : UInt<1>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}}}} @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala 107:25]

  wire anonIn : { a : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<5>, address : UInt<32>, user : { }, echo : { }, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}}, flip d : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<5>, sink : UInt<3>, denied : UInt<1>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}}} @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 551:17]
  invalidate anonIn.d.bits.corrupt @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn.d.bits.data @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn.d.bits.denied @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn.d.bits.sink @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn.d.bits.source @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn.d.bits.size @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn.d.bits.param @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn.d.bits.opcode @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn.d.valid @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn.d.ready @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn.a.bits.corrupt @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn.a.bits.data @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn.a.bits.mask @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn.a.bits.address @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn.a.bits.source @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn.a.bits.size @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn.a.bits.param @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn.a.bits.opcode @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn.a.valid @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn.a.ready @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  wire anonIn_1 : { a : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, user : { }, echo : { }, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}}, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}}, c : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}}, flip d : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<2>, sink : UInt<3>, denied : UInt<1>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}}, e : { flip ready : UInt<1>, valid : UInt<1>, bits : { sink : UInt<3>}}} @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 551:17]
  invalidate anonIn_1.e.bits.sink @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.e.valid @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.e.ready @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.d.bits.corrupt @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.d.bits.data @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.d.bits.denied @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.d.bits.sink @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.d.bits.source @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.d.bits.size @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.d.bits.param @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.d.bits.opcode @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.d.valid @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.d.ready @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.c.bits.corrupt @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.c.bits.data @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.c.bits.address @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.c.bits.source @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.c.bits.size @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.c.bits.param @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.c.bits.opcode @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.c.valid @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.c.ready @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.b.bits.corrupt @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.b.bits.data @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.b.bits.mask @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.b.bits.address @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.b.bits.source @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.b.bits.size @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.b.bits.param @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.b.bits.opcode @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.b.valid @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.b.ready @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.a.bits.corrupt @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.a.bits.data @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.a.bits.mask @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.a.bits.address @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.a.bits.source @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.a.bits.size @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.a.bits.param @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.a.bits.opcode @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.a.valid @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  invalidate anonIn_1.a.ready @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 554:7]
  inst monitor of TLMonitor @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 27:25]
  connect monitor.clock, clock
  connect monitor.reset, reset
  connect monitor.io.in.d.bits.corrupt, anonIn.d.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor.io.in.d.bits.data, anonIn.d.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor.io.in.d.bits.denied, anonIn.d.bits.denied @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor.io.in.d.bits.sink, anonIn.d.bits.sink @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor.io.in.d.bits.source, anonIn.d.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor.io.in.d.bits.size, anonIn.d.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor.io.in.d.bits.param, anonIn.d.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor.io.in.d.bits.opcode, anonIn.d.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor.io.in.d.valid, anonIn.d.valid @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor.io.in.d.ready, anonIn.d.ready @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor.io.in.a.bits.corrupt, anonIn.a.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor.io.in.a.bits.data, anonIn.a.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor.io.in.a.bits.mask, anonIn.a.bits.mask @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor.io.in.a.bits.address, anonIn.a.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor.io.in.a.bits.source, anonIn.a.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor.io.in.a.bits.size, anonIn.a.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor.io.in.a.bits.param, anonIn.a.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor.io.in.a.bits.opcode, anonIn.a.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor.io.in.a.valid, anonIn.a.valid @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor.io.in.a.ready, anonIn.a.ready @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  inst monitor_1 of TLMonitor_1 @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 27:25]
  connect monitor_1.clock, clock
  connect monitor_1.reset, reset
  connect monitor_1.io.in.e.bits.sink, anonIn_1.e.bits.sink @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.e.valid, anonIn_1.e.valid @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.e.ready, anonIn_1.e.ready @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.d.bits.corrupt, anonIn_1.d.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.d.bits.data, anonIn_1.d.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.d.bits.denied, anonIn_1.d.bits.denied @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.d.bits.sink, anonIn_1.d.bits.sink @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.d.bits.source, anonIn_1.d.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.d.bits.size, anonIn_1.d.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.d.bits.param, anonIn_1.d.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.d.bits.opcode, anonIn_1.d.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.d.valid, anonIn_1.d.valid @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.d.ready, anonIn_1.d.ready @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.c.bits.corrupt, anonIn_1.c.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.c.bits.data, anonIn_1.c.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.c.bits.address, anonIn_1.c.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.c.bits.source, anonIn_1.c.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.c.bits.size, anonIn_1.c.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.c.bits.param, anonIn_1.c.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.c.bits.opcode, anonIn_1.c.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.c.valid, anonIn_1.c.valid @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.c.ready, anonIn_1.c.ready @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.b.bits.corrupt, anonIn_1.b.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.b.bits.data, anonIn_1.b.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.b.bits.mask, anonIn_1.b.bits.mask @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.b.bits.address, anonIn_1.b.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.b.bits.source, anonIn_1.b.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.b.bits.size, anonIn_1.b.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.b.bits.param, anonIn_1.b.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.b.bits.opcode, anonIn_1.b.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.b.valid, anonIn_1.b.valid @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.b.ready, anonIn_1.b.ready @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.a.bits.corrupt, anonIn_1.a.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.a.bits.data, anonIn_1.a.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.a.bits.mask, anonIn_1.a.bits.mask @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.a.bits.address, anonIn_1.a.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.a.bits.source, anonIn_1.a.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.a.bits.size, anonIn_1.a.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.a.bits.param, anonIn_1.a.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.a.bits.opcode, anonIn_1.a.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.a.valid, anonIn_1.a.valid @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  connect monitor_1.io.in.a.ready, anonIn_1.a.ready @[generators/rocket-chip/src/main/scala/tilelink/Nodes.scala 28:19]
  wire anonOut : { a : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<6>, address : UInt<29>, user : { }, echo : { }, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}}, flip d : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<6>, sink : UInt<1>, denied : UInt<1>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}}} @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 542:17]
  invalidate anonOut.d.bits.corrupt @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate anonOut.d.bits.data @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate anonOut.d.bits.denied @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate anonOut.d.bits.sink @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate anonOut.d.bits.source @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate anonOut.d.bits.size @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate anonOut.d.bits.param @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate anonOut.d.bits.opcode @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate anonOut.d.valid @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate anonOut.d.ready @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate anonOut.a.bits.corrupt @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate anonOut.a.bits.data @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate anonOut.a.bits.mask @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate anonOut.a.bits.address @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate anonOut.a.bits.source @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate anonOut.a.bits.size @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate anonOut.a.bits.param @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate anonOut.a.bits.opcode @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate anonOut.a.valid @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate anonOut.a.ready @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  wire x1_anonOut : { a : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<6>, address : UInt<32>, user : { }, echo : { }, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}}, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<6>, address : UInt<32>, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}}, c : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<6>, address : UInt<32>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}}, flip d : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<6>, sink : UInt<3>, denied : UInt<1>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}}, e : { flip ready : UInt<1>, valid : UInt<1>, bits : { sink : UInt<3>}}} @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 542:17]
  invalidate x1_anonOut.e.bits.sink @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.e.valid @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.e.ready @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.d.bits.corrupt @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.d.bits.data @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.d.bits.denied @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.d.bits.sink @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.d.bits.source @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.d.bits.size @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.d.bits.param @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.d.bits.opcode @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.d.valid @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.d.ready @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.c.bits.corrupt @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.c.bits.data @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.c.bits.address @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.c.bits.source @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.c.bits.size @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.c.bits.param @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.c.bits.opcode @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.c.valid @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.c.ready @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.b.bits.corrupt @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.b.bits.data @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.b.bits.mask @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.b.bits.address @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.b.bits.source @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.b.bits.size @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.b.bits.param @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.b.bits.opcode @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.b.valid @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.b.ready @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.a.bits.corrupt @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.a.bits.data @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.a.bits.mask @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.a.bits.address @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.a.bits.source @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.a.bits.size @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.a.bits.param @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.a.bits.opcode @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.a.valid @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  invalidate x1_anonOut.a.ready @[generators/diplomacy/diplomacy/src/diplomacy/nodes/MixedNode.scala 545:7]
  connect auto.anon_out_0, anonOut @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala 113:12]
  connect auto.anon_out_1, x1_anonOut @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala 113:12]
  connect anonIn, auto.anon_in_0 @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala 111:16]
  connect anonIn_1, auto.anon_in_1 @[generators/diplomacy/diplomacy/src/diplomacy/lazymodule/LazyModuleImp.scala 111:16]
  wire in : { a : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<6>, address : UInt<32>, user : { }, echo : { }, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}}, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<6>, address : UInt<32>, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}}, c : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<6>, address : UInt<32>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}}, flip d : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<6>, sink : UInt<3>, denied : UInt<1>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}}, e : { flip ready : UInt<1>, valid : UInt<1>, bits : { sink : UInt<3>}}}[2] @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 159:18]
  connect in[0].a.bits.corrupt, anonIn.a.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 165:37]
  connect in[0].a.bits.data, anonIn.a.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 165:37]
  connect in[0].a.bits.mask, anonIn.a.bits.mask @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 165:37]
  connect in[0].a.bits.address, anonIn.a.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 165:37]
  connect in[0].a.bits.source, anonIn.a.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 165:37]
  connect in[0].a.bits.size, anonIn.a.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 165:37]
  connect in[0].a.bits.param, anonIn.a.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 165:37]
  connect in[0].a.bits.opcode, anonIn.a.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 165:37]
  connect in[0].a.valid, anonIn.a.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 165:37]
  connect anonIn.a.ready, in[0].a.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 165:37]
  node _in_0_a_bits_source_T = or(anonIn.a.bits.source, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 166:55]
  connect in[0].a.bits.source, _in_0_a_bits_source_T @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 166:29]
  invalidate in[0].b.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 178:17]
  invalidate in[0].b.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 178:17]
  invalidate in[0].b.bits.mask @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 178:17]
  invalidate in[0].b.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 178:17]
  invalidate in[0].b.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 178:17]
  invalidate in[0].b.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 178:17]
  invalidate in[0].b.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 178:17]
  invalidate in[0].b.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 178:17]
  invalidate in[0].b.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 178:17]
  invalidate in[0].b.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 178:17]
  wire _WIRE : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<5>, address : UInt<32>, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}} @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE.bits.corrupt, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE.bits.data, UInt<64>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE.bits.mask, UInt<8>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE.bits.address, UInt<32>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE.bits.source, UInt<5>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE.bits.size, UInt<4>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE.bits.param, UInt<2>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE.bits.opcode, UInt<3>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE.valid, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE.ready, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  wire _WIRE_1 : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<5>, address : UInt<32>, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}} @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:61]
  connect _WIRE_1.bits, _WIRE.bits @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:61]
  connect _WIRE_1.valid, _WIRE.valid @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:61]
  connect _WIRE_1.ready, _WIRE.ready @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:61]
  invalidate _WIRE_1.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 179:21]
  invalidate _WIRE_1.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 179:21]
  invalidate _WIRE_1.bits.mask @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 179:21]
  invalidate _WIRE_1.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 179:21]
  invalidate _WIRE_1.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 179:21]
  invalidate _WIRE_1.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 179:21]
  invalidate _WIRE_1.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 179:21]
  invalidate _WIRE_1.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 179:21]
  invalidate _WIRE_1.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 179:21]
  invalidate _WIRE_1.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 179:21]
  connect in[0].b.ready, UInt<1>(0h1) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 180:23]
  wire _WIRE_2 : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<5>, address : UInt<32>, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}} @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_2.bits.corrupt, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_2.bits.data, UInt<64>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_2.bits.mask, UInt<8>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_2.bits.address, UInt<32>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_2.bits.source, UInt<5>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_2.bits.size, UInt<4>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_2.bits.param, UInt<2>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_2.bits.opcode, UInt<3>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_2.valid, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_2.ready, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  wire _WIRE_3 : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<5>, address : UInt<32>, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}} @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:61]
  connect _WIRE_3.bits, _WIRE_2.bits @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:61]
  connect _WIRE_3.valid, _WIRE_2.valid @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:61]
  connect _WIRE_3.ready, _WIRE_2.ready @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:61]
  connect _WIRE_3.valid, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 181:26]
  invalidate in[0].c.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 189:17]
  invalidate in[0].c.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 189:17]
  invalidate in[0].c.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 189:17]
  invalidate in[0].c.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 189:17]
  invalidate in[0].c.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 189:17]
  invalidate in[0].c.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 189:17]
  invalidate in[0].c.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 189:17]
  invalidate in[0].c.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 189:17]
  invalidate in[0].c.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 189:17]
  wire _WIRE_4 : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<5>, address : UInt<32>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}} @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_4.bits.corrupt, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_4.bits.data, UInt<64>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_4.bits.address, UInt<32>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_4.bits.source, UInt<5>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_4.bits.size, UInt<4>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_4.bits.param, UInt<3>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_4.bits.opcode, UInt<3>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_4.valid, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_4.ready, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  wire _WIRE_5 : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<5>, address : UInt<32>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}} @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:61]
  connect _WIRE_5.bits, _WIRE_4.bits @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:61]
  connect _WIRE_5.valid, _WIRE_4.valid @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:61]
  connect _WIRE_5.ready, _WIRE_4.ready @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:61]
  invalidate _WIRE_5.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 190:20]
  invalidate _WIRE_5.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 190:20]
  invalidate _WIRE_5.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 190:20]
  invalidate _WIRE_5.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 190:20]
  invalidate _WIRE_5.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 190:20]
  invalidate _WIRE_5.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 190:20]
  invalidate _WIRE_5.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 190:20]
  invalidate _WIRE_5.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 190:20]
  invalidate _WIRE_5.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 190:20]
  connect in[0].c.valid, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 191:23]
  wire _WIRE_6 : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<5>, address : UInt<32>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}} @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_6.bits.corrupt, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_6.bits.data, UInt<64>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_6.bits.address, UInt<32>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_6.bits.source, UInt<5>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_6.bits.size, UInt<4>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_6.bits.param, UInt<3>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_6.bits.opcode, UInt<3>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_6.valid, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_6.ready, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  wire _WIRE_7 : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<5>, address : UInt<32>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}} @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:61]
  connect _WIRE_7.bits, _WIRE_6.bits @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:61]
  connect _WIRE_7.valid, _WIRE_6.valid @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:61]
  connect _WIRE_7.ready, _WIRE_6.ready @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:61]
  connect _WIRE_7.ready, UInt<1>(0h1) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 192:26]
  connect anonIn.d.bits.corrupt, in[0].d.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 196:40]
  connect anonIn.d.bits.data, in[0].d.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 196:40]
  connect anonIn.d.bits.denied, in[0].d.bits.denied @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 196:40]
  connect anonIn.d.bits.sink, in[0].d.bits.sink @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 196:40]
  connect anonIn.d.bits.source, in[0].d.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 196:40]
  connect anonIn.d.bits.size, in[0].d.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 196:40]
  connect anonIn.d.bits.param, in[0].d.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 196:40]
  connect anonIn.d.bits.opcode, in[0].d.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 196:40]
  connect anonIn.d.valid, in[0].d.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 196:40]
  connect in[0].d.ready, anonIn.d.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 196:40]
  node _anonIn_d_bits_source_T = bits(in[0].d.bits.source, 4, 0) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 156:69]
  connect anonIn.d.bits.source, _anonIn_d_bits_source_T @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 197:32]
  invalidate in[0].e.bits.sink @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 208:17]
  invalidate in[0].e.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 208:17]
  invalidate in[0].e.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 208:17]
  wire _WIRE_8 : { flip ready : UInt<1>, valid : UInt<1>, bits : { sink : UInt<3>}} @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:74]
  connect _WIRE_8.bits.sink, UInt<3>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:74]
  connect _WIRE_8.valid, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:74]
  connect _WIRE_8.ready, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:74]
  wire _WIRE_9 : { flip ready : UInt<1>, valid : UInt<1>, bits : { sink : UInt<3>}} @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:61]
  connect _WIRE_9.bits, _WIRE_8.bits @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:61]
  connect _WIRE_9.valid, _WIRE_8.valid @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:61]
  connect _WIRE_9.ready, _WIRE_8.ready @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:61]
  invalidate _WIRE_9.bits.sink @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 209:21]
  invalidate _WIRE_9.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 209:21]
  invalidate _WIRE_9.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 209:21]
  connect in[0].e.valid, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 210:23]
  wire _WIRE_10 : { flip ready : UInt<1>, valid : UInt<1>, bits : { sink : UInt<3>}} @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:74]
  connect _WIRE_10.bits.sink, UInt<3>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:74]
  connect _WIRE_10.valid, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:74]
  connect _WIRE_10.ready, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:74]
  wire _WIRE_11 : { flip ready : UInt<1>, valid : UInt<1>, bits : { sink : UInt<3>}} @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:61]
  connect _WIRE_11.bits, _WIRE_10.bits @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:61]
  connect _WIRE_11.valid, _WIRE_10.valid @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:61]
  connect _WIRE_11.ready, _WIRE_10.ready @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:61]
  connect _WIRE_11.ready, UInt<1>(0h1) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 211:26]
  connect in[1].a.bits.corrupt, anonIn_1.a.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 165:37]
  connect in[1].a.bits.data, anonIn_1.a.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 165:37]
  connect in[1].a.bits.mask, anonIn_1.a.bits.mask @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 165:37]
  connect in[1].a.bits.address, anonIn_1.a.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 165:37]
  connect in[1].a.bits.source, anonIn_1.a.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 165:37]
  connect in[1].a.bits.size, anonIn_1.a.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 165:37]
  connect in[1].a.bits.param, anonIn_1.a.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 165:37]
  connect in[1].a.bits.opcode, anonIn_1.a.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 165:37]
  connect in[1].a.valid, anonIn_1.a.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 165:37]
  connect anonIn_1.a.ready, in[1].a.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 165:37]
  node _in_1_a_bits_source_T = or(anonIn_1.a.bits.source, UInt<6>(0h20)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 166:55]
  connect in[1].a.bits.source, _in_1_a_bits_source_T @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 166:29]
  connect anonIn_1.b.bits.corrupt, in[1].b.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 175:31]
  connect anonIn_1.b.bits.data, in[1].b.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 175:31]
  connect anonIn_1.b.bits.mask, in[1].b.bits.mask @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 175:31]
  connect anonIn_1.b.bits.address, in[1].b.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 175:31]
  connect anonIn_1.b.bits.source, in[1].b.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 175:31]
  connect anonIn_1.b.bits.size, in[1].b.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 175:31]
  connect anonIn_1.b.bits.param, in[1].b.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 175:31]
  connect anonIn_1.b.bits.opcode, in[1].b.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 175:31]
  connect anonIn_1.b.valid, in[1].b.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 175:31]
  connect in[1].b.ready, anonIn_1.b.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 175:31]
  node _anonIn_b_bits_source_T = bits(in[1].b.bits.source, 1, 0) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 156:69]
  connect anonIn_1.b.bits.source, _anonIn_b_bits_source_T @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 176:32]
  connect in[1].c.bits.corrupt, anonIn_1.c.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 186:37]
  connect in[1].c.bits.data, anonIn_1.c.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 186:37]
  connect in[1].c.bits.address, anonIn_1.c.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 186:37]
  connect in[1].c.bits.source, anonIn_1.c.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 186:37]
  connect in[1].c.bits.size, anonIn_1.c.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 186:37]
  connect in[1].c.bits.param, anonIn_1.c.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 186:37]
  connect in[1].c.bits.opcode, anonIn_1.c.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 186:37]
  connect in[1].c.valid, anonIn_1.c.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 186:37]
  connect anonIn_1.c.ready, in[1].c.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 186:37]
  node _in_1_c_bits_source_T = or(anonIn_1.c.bits.source, UInt<6>(0h20)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 187:55]
  connect in[1].c.bits.source, _in_1_c_bits_source_T @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 187:29]
  connect anonIn_1.d.bits.corrupt, in[1].d.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 196:40]
  connect anonIn_1.d.bits.data, in[1].d.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 196:40]
  connect anonIn_1.d.bits.denied, in[1].d.bits.denied @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 196:40]
  connect anonIn_1.d.bits.sink, in[1].d.bits.sink @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 196:40]
  connect anonIn_1.d.bits.source, in[1].d.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 196:40]
  connect anonIn_1.d.bits.size, in[1].d.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 196:40]
  connect anonIn_1.d.bits.param, in[1].d.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 196:40]
  connect anonIn_1.d.bits.opcode, in[1].d.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 196:40]
  connect anonIn_1.d.valid, in[1].d.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 196:40]
  connect in[1].d.ready, anonIn_1.d.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 196:40]
  node _anonIn_d_bits_source_T_1 = bits(in[1].d.bits.source, 1, 0) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 156:69]
  connect anonIn_1.d.bits.source, _anonIn_d_bits_source_T_1 @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 197:32]
  connect in[1].e.bits.sink, anonIn_1.e.bits.sink @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 206:28]
  connect in[1].e.valid, anonIn_1.e.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 206:28]
  connect anonIn_1.e.ready, in[1].e.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 206:28]
  wire out : { a : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<6>, address : UInt<32>, user : { }, echo : { }, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}}, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<6>, address : UInt<32>, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}}, c : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<6>, address : UInt<32>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}}, flip d : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<6>, sink : UInt<3>, denied : UInt<1>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}}, e : { flip ready : UInt<1>, valid : UInt<1>, bits : { sink : UInt<3>}}}[2] @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 216:19]
  connect anonOut.a.bits.corrupt, out[0].a.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 222:41]
  connect anonOut.a.bits.data, out[0].a.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 222:41]
  connect anonOut.a.bits.mask, out[0].a.bits.mask @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 222:41]
  connect anonOut.a.bits.address, out[0].a.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 222:41]
  connect anonOut.a.bits.source, out[0].a.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 222:41]
  connect anonOut.a.bits.size, out[0].a.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 222:41]
  connect anonOut.a.bits.param, out[0].a.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 222:41]
  connect anonOut.a.bits.opcode, out[0].a.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 222:41]
  connect anonOut.a.valid, out[0].a.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 222:41]
  connect out[0].a.ready, anonOut.a.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 222:41]
  invalidate out[0].b.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 233:18]
  invalidate out[0].b.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 233:18]
  invalidate out[0].b.bits.mask @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 233:18]
  invalidate out[0].b.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 233:18]
  invalidate out[0].b.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 233:18]
  invalidate out[0].b.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 233:18]
  invalidate out[0].b.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 233:18]
  invalidate out[0].b.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 233:18]
  invalidate out[0].b.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 233:18]
  invalidate out[0].b.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 233:18]
  wire _WIRE_12 : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<6>, address : UInt<29>, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}} @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_12.bits.corrupt, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_12.bits.data, UInt<64>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_12.bits.mask, UInt<8>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_12.bits.address, UInt<29>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_12.bits.source, UInt<6>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_12.bits.size, UInt<4>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_12.bits.param, UInt<2>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_12.bits.opcode, UInt<3>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_12.valid, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_12.ready, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  wire _WIRE_13 : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<6>, address : UInt<29>, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}} @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:61]
  connect _WIRE_13.bits, _WIRE_12.bits @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:61]
  connect _WIRE_13.valid, _WIRE_12.valid @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:61]
  connect _WIRE_13.ready, _WIRE_12.ready @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:61]
  invalidate _WIRE_13.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 234:21]
  invalidate _WIRE_13.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 234:21]
  invalidate _WIRE_13.bits.mask @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 234:21]
  invalidate _WIRE_13.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 234:21]
  invalidate _WIRE_13.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 234:21]
  invalidate _WIRE_13.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 234:21]
  invalidate _WIRE_13.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 234:21]
  invalidate _WIRE_13.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 234:21]
  invalidate _WIRE_13.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 234:21]
  invalidate _WIRE_13.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 234:21]
  connect out[0].b.valid, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 235:24]
  wire _WIRE_14 : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<6>, address : UInt<29>, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}} @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_14.bits.corrupt, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_14.bits.data, UInt<64>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_14.bits.mask, UInt<8>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_14.bits.address, UInt<29>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_14.bits.source, UInt<6>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_14.bits.size, UInt<4>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_14.bits.param, UInt<2>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_14.bits.opcode, UInt<3>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_14.valid, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  connect _WIRE_14.ready, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:74]
  wire _WIRE_15 : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<6>, address : UInt<29>, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}} @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:61]
  connect _WIRE_15.bits, _WIRE_14.bits @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:61]
  connect _WIRE_15.valid, _WIRE_14.valid @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:61]
  connect _WIRE_15.ready, _WIRE_14.ready @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 264:61]
  connect _WIRE_15.ready, UInt<1>(0h1) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 236:27]
  invalidate out[0].c.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 243:19]
  invalidate out[0].c.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 243:19]
  invalidate out[0].c.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 243:19]
  invalidate out[0].c.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 243:19]
  invalidate out[0].c.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 243:19]
  invalidate out[0].c.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 243:19]
  invalidate out[0].c.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 243:19]
  invalidate out[0].c.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 243:19]
  invalidate out[0].c.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 243:19]
  wire _WIRE_16 : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<6>, address : UInt<29>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}} @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_16.bits.corrupt, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_16.bits.data, UInt<64>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_16.bits.address, UInt<29>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_16.bits.source, UInt<6>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_16.bits.size, UInt<4>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_16.bits.param, UInt<3>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_16.bits.opcode, UInt<3>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_16.valid, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_16.ready, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  wire _WIRE_17 : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<6>, address : UInt<29>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}} @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:61]
  connect _WIRE_17.bits, _WIRE_16.bits @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:61]
  connect _WIRE_17.valid, _WIRE_16.valid @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:61]
  connect _WIRE_17.ready, _WIRE_16.ready @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:61]
  invalidate _WIRE_17.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 244:22]
  invalidate _WIRE_17.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 244:22]
  invalidate _WIRE_17.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 244:22]
  invalidate _WIRE_17.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 244:22]
  invalidate _WIRE_17.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 244:22]
  invalidate _WIRE_17.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 244:22]
  invalidate _WIRE_17.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 244:22]
  invalidate _WIRE_17.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 244:22]
  invalidate _WIRE_17.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 244:22]
  connect out[0].c.ready, UInt<1>(0h1) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 245:24]
  wire _WIRE_18 : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<6>, address : UInt<29>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}} @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_18.bits.corrupt, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_18.bits.data, UInt<64>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_18.bits.address, UInt<29>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_18.bits.source, UInt<6>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_18.bits.size, UInt<4>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_18.bits.param, UInt<3>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_18.bits.opcode, UInt<3>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_18.valid, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  connect _WIRE_18.ready, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:74]
  wire _WIRE_19 : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<6>, address : UInt<29>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}} @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:61]
  connect _WIRE_19.bits, _WIRE_18.bits @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:61]
  connect _WIRE_19.valid, _WIRE_18.valid @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:61]
  connect _WIRE_19.ready, _WIRE_18.ready @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 265:61]
  connect _WIRE_19.valid, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 246:27]
  connect out[0].d.bits.corrupt, anonOut.d.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 250:29]
  connect out[0].d.bits.data, anonOut.d.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 250:29]
  connect out[0].d.bits.denied, anonOut.d.bits.denied @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 250:29]
  connect out[0].d.bits.sink, anonOut.d.bits.sink @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 250:29]
  connect out[0].d.bits.source, anonOut.d.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 250:29]
  connect out[0].d.bits.size, anonOut.d.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 250:29]
  connect out[0].d.bits.param, anonOut.d.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 250:29]
  connect out[0].d.bits.opcode, anonOut.d.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 250:29]
  connect out[0].d.valid, anonOut.d.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 250:29]
  connect anonOut.d.ready, out[0].d.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 250:29]
  node _out_0_d_bits_sink_T = or(anonOut.d.bits.sink, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 251:53]
  connect out[0].d.bits.sink, _out_0_d_bits_sink_T @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 251:28]
  invalidate out[0].e.bits.sink @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 263:18]
  invalidate out[0].e.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 263:18]
  invalidate out[0].e.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 263:18]
  wire _WIRE_20 : { flip ready : UInt<1>, valid : UInt<1>, bits : { sink : UInt<1>}} @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:74]
  connect _WIRE_20.bits.sink, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:74]
  connect _WIRE_20.valid, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:74]
  connect _WIRE_20.ready, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:74]
  wire _WIRE_21 : { flip ready : UInt<1>, valid : UInt<1>, bits : { sink : UInt<1>}} @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:61]
  connect _WIRE_21.bits, _WIRE_20.bits @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:61]
  connect _WIRE_21.valid, _WIRE_20.valid @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:61]
  connect _WIRE_21.ready, _WIRE_20.ready @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:61]
  invalidate _WIRE_21.bits.sink @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 264:22]
  invalidate _WIRE_21.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 264:22]
  invalidate _WIRE_21.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 264:22]
  connect out[0].e.ready, UInt<1>(0h1) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 265:24]
  wire _WIRE_22 : { flip ready : UInt<1>, valid : UInt<1>, bits : { sink : UInt<1>}} @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:74]
  connect _WIRE_22.bits.sink, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:74]
  connect _WIRE_22.valid, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:74]
  connect _WIRE_22.ready, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:74]
  wire _WIRE_23 : { flip ready : UInt<1>, valid : UInt<1>, bits : { sink : UInt<1>}} @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:61]
  connect _WIRE_23.bits, _WIRE_22.bits @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:61]
  connect _WIRE_23.valid, _WIRE_22.valid @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:61]
  connect _WIRE_23.ready, _WIRE_22.ready @[generators/rocket-chip/src/main/scala/tilelink/Bundles.scala 267:61]
  connect _WIRE_23.valid, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 266:27]
  connect x1_anonOut.a.bits.corrupt, out[1].a.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 222:41]
  connect x1_anonOut.a.bits.data, out[1].a.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 222:41]
  connect x1_anonOut.a.bits.mask, out[1].a.bits.mask @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 222:41]
  connect x1_anonOut.a.bits.address, out[1].a.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 222:41]
  connect x1_anonOut.a.bits.source, out[1].a.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 222:41]
  connect x1_anonOut.a.bits.size, out[1].a.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 222:41]
  connect x1_anonOut.a.bits.param, out[1].a.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 222:41]
  connect x1_anonOut.a.bits.opcode, out[1].a.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 222:41]
  connect x1_anonOut.a.valid, out[1].a.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 222:41]
  connect out[1].a.ready, x1_anonOut.a.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 222:41]
  connect out[1].b.bits.corrupt, x1_anonOut.b.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 231:29]
  connect out[1].b.bits.data, x1_anonOut.b.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 231:29]
  connect out[1].b.bits.mask, x1_anonOut.b.bits.mask @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 231:29]
  connect out[1].b.bits.address, x1_anonOut.b.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 231:29]
  connect out[1].b.bits.source, x1_anonOut.b.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 231:29]
  connect out[1].b.bits.size, x1_anonOut.b.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 231:29]
  connect out[1].b.bits.param, x1_anonOut.b.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 231:29]
  connect out[1].b.bits.opcode, x1_anonOut.b.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 231:29]
  connect out[1].b.valid, x1_anonOut.b.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 231:29]
  connect x1_anonOut.b.ready, out[1].b.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 231:29]
  connect x1_anonOut.c.bits.corrupt, out[1].c.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 241:41]
  connect x1_anonOut.c.bits.data, out[1].c.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 241:41]
  connect x1_anonOut.c.bits.address, out[1].c.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 241:41]
  connect x1_anonOut.c.bits.source, out[1].c.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 241:41]
  connect x1_anonOut.c.bits.size, out[1].c.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 241:41]
  connect x1_anonOut.c.bits.param, out[1].c.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 241:41]
  connect x1_anonOut.c.bits.opcode, out[1].c.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 241:41]
  connect x1_anonOut.c.valid, out[1].c.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 241:41]
  connect out[1].c.ready, x1_anonOut.c.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 241:41]
  connect out[1].d.bits.corrupt, x1_anonOut.d.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 250:29]
  connect out[1].d.bits.data, x1_anonOut.d.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 250:29]
  connect out[1].d.bits.denied, x1_anonOut.d.bits.denied @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 250:29]
  connect out[1].d.bits.sink, x1_anonOut.d.bits.sink @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 250:29]
  connect out[1].d.bits.source, x1_anonOut.d.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 250:29]
  connect out[1].d.bits.size, x1_anonOut.d.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 250:29]
  connect out[1].d.bits.param, x1_anonOut.d.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 250:29]
  connect out[1].d.bits.opcode, x1_anonOut.d.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 250:29]
  connect out[1].d.valid, x1_anonOut.d.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 250:29]
  connect x1_anonOut.d.ready, out[1].d.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 250:29]
  node _out_1_d_bits_sink_T = or(x1_anonOut.d.bits.sink, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 251:53]
  connect out[1].d.bits.sink, _out_1_d_bits_sink_T @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 251:28]
  connect x1_anonOut.e.bits.sink, out[1].e.bits.sink @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 260:32]
  connect x1_anonOut.e.valid, out[1].e.valid @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 260:32]
  connect out[1].e.ready, x1_anonOut.e.ready @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 260:32]
  node _anonOut_e_bits_sink_T = bits(out[1].e.bits.sink, 2, 0) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 156:69]
  connect x1_anonOut.e.bits.sink, _anonOut_e_bits_sink_T @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 261:31]
  node _requestAIO_T = xor(in[0].a.bits.address, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:31]
  node _requestAIO_T_1 = cvt(_requestAIO_T) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:41]
  node _requestAIO_T_2 = and(_requestAIO_T_1, asSInt(UInt<33>(0h8c000000))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestAIO_T_3 = asSInt(_requestAIO_T_2) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestAIO_T_4 = eq(_requestAIO_T_3, asSInt(UInt<1>(0h0))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:59]
  node _requestAIO_T_5 = xor(in[0].a.bits.address, UInt<17>(0h10000)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:31]
  node _requestAIO_T_6 = cvt(_requestAIO_T_5) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:41]
  node _requestAIO_T_7 = and(_requestAIO_T_6, asSInt(UInt<33>(0h8c011000))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestAIO_T_8 = asSInt(_requestAIO_T_7) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestAIO_T_9 = eq(_requestAIO_T_8, asSInt(UInt<1>(0h0))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:59]
  node _requestAIO_T_10 = xor(in[0].a.bits.address, UInt<28>(0hc000000)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:31]
  node _requestAIO_T_11 = cvt(_requestAIO_T_10) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:41]
  node _requestAIO_T_12 = and(_requestAIO_T_11, asSInt(UInt<33>(0h8c000000))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestAIO_T_13 = asSInt(_requestAIO_T_12) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestAIO_T_14 = eq(_requestAIO_T_13, asSInt(UInt<1>(0h0))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:59]
  node _requestAIO_T_15 = or(_requestAIO_T_4, _requestAIO_T_9) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 291:92]
  node _requestAIO_T_16 = or(_requestAIO_T_15, _requestAIO_T_14) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 291:92]
  node requestAIO_0_0 = or(UInt<1>(0h0), _requestAIO_T_16) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 307:107]
  node _requestAIO_T_17 = xor(in[0].a.bits.address, UInt<28>(0h8000000)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:31]
  node _requestAIO_T_18 = cvt(_requestAIO_T_17) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:41]
  node _requestAIO_T_19 = and(_requestAIO_T_18, asSInt(UInt<33>(0h8c010000))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestAIO_T_20 = asSInt(_requestAIO_T_19) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestAIO_T_21 = eq(_requestAIO_T_20, asSInt(UInt<1>(0h0))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:59]
  node _requestAIO_T_22 = xor(in[0].a.bits.address, UInt<32>(0h80000000)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:31]
  node _requestAIO_T_23 = cvt(_requestAIO_T_22) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:41]
  node _requestAIO_T_24 = and(_requestAIO_T_23, asSInt(UInt<33>(0h80000000))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestAIO_T_25 = asSInt(_requestAIO_T_24) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestAIO_T_26 = eq(_requestAIO_T_25, asSInt(UInt<1>(0h0))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:59]
  node _requestAIO_T_27 = or(_requestAIO_T_21, _requestAIO_T_26) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 291:92]
  node requestAIO_0_1 = or(UInt<1>(0h0), _requestAIO_T_27) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 307:107]
  node _requestAIO_T_28 = xor(in[1].a.bits.address, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:31]
  node _requestAIO_T_29 = cvt(_requestAIO_T_28) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:41]
  node _requestAIO_T_30 = and(_requestAIO_T_29, asSInt(UInt<33>(0h8c000000))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestAIO_T_31 = asSInt(_requestAIO_T_30) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestAIO_T_32 = eq(_requestAIO_T_31, asSInt(UInt<1>(0h0))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:59]
  node _requestAIO_T_33 = xor(in[1].a.bits.address, UInt<17>(0h10000)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:31]
  node _requestAIO_T_34 = cvt(_requestAIO_T_33) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:41]
  node _requestAIO_T_35 = and(_requestAIO_T_34, asSInt(UInt<33>(0h8c011000))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestAIO_T_36 = asSInt(_requestAIO_T_35) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestAIO_T_37 = eq(_requestAIO_T_36, asSInt(UInt<1>(0h0))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:59]
  node _requestAIO_T_38 = xor(in[1].a.bits.address, UInt<28>(0hc000000)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:31]
  node _requestAIO_T_39 = cvt(_requestAIO_T_38) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:41]
  node _requestAIO_T_40 = and(_requestAIO_T_39, asSInt(UInt<33>(0h8c000000))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestAIO_T_41 = asSInt(_requestAIO_T_40) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestAIO_T_42 = eq(_requestAIO_T_41, asSInt(UInt<1>(0h0))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:59]
  node _requestAIO_T_43 = or(_requestAIO_T_32, _requestAIO_T_37) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 291:92]
  node _requestAIO_T_44 = or(_requestAIO_T_43, _requestAIO_T_42) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 291:92]
  node requestAIO_1_0 = or(UInt<1>(0h0), _requestAIO_T_44) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 307:107]
  node _requestAIO_T_45 = xor(in[1].a.bits.address, UInt<28>(0h8000000)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:31]
  node _requestAIO_T_46 = cvt(_requestAIO_T_45) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:41]
  node _requestAIO_T_47 = and(_requestAIO_T_46, asSInt(UInt<33>(0h8c010000))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestAIO_T_48 = asSInt(_requestAIO_T_47) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestAIO_T_49 = eq(_requestAIO_T_48, asSInt(UInt<1>(0h0))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:59]
  node _requestAIO_T_50 = xor(in[1].a.bits.address, UInt<32>(0h80000000)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:31]
  node _requestAIO_T_51 = cvt(_requestAIO_T_50) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:41]
  node _requestAIO_T_52 = and(_requestAIO_T_51, asSInt(UInt<33>(0h80000000))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestAIO_T_53 = asSInt(_requestAIO_T_52) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestAIO_T_54 = eq(_requestAIO_T_53, asSInt(UInt<1>(0h0))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:59]
  node _requestAIO_T_55 = or(_requestAIO_T_49, _requestAIO_T_54) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 291:92]
  node requestAIO_1_1 = or(UInt<1>(0h0), _requestAIO_T_55) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 307:107]
  node _requestCIO_T = xor(in[0].c.bits.address, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:31]
  node _requestCIO_T_1 = cvt(_requestCIO_T) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:41]
  node _requestCIO_T_2 = and(_requestCIO_T_1, asSInt(UInt<1>(0h0))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestCIO_T_3 = asSInt(_requestCIO_T_2) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestCIO_T_4 = eq(_requestCIO_T_3, asSInt(UInt<1>(0h0))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:59]
  node requestCIO_0_0 = or(UInt<1>(0h1), _requestCIO_T_4) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 308:107]
  node _requestCIO_T_5 = xor(in[0].c.bits.address, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:31]
  node _requestCIO_T_6 = cvt(_requestCIO_T_5) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:41]
  node _requestCIO_T_7 = and(_requestCIO_T_6, asSInt(UInt<1>(0h0))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestCIO_T_8 = asSInt(_requestCIO_T_7) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestCIO_T_9 = eq(_requestCIO_T_8, asSInt(UInt<1>(0h0))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:59]
  node requestCIO_0_1 = or(UInt<1>(0h1), _requestCIO_T_9) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 308:107]
  node _requestCIO_T_10 = xor(in[1].c.bits.address, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:31]
  node _requestCIO_T_11 = cvt(_requestCIO_T_10) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:41]
  node _requestCIO_T_12 = and(_requestCIO_T_11, asSInt(UInt<1>(0h0))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestCIO_T_13 = asSInt(_requestCIO_T_12) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestCIO_T_14 = eq(_requestCIO_T_13, asSInt(UInt<1>(0h0))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:59]
  node requestCIO_1_0 = or(UInt<1>(0h1), _requestCIO_T_14) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 308:107]
  node _requestCIO_T_15 = xor(in[1].c.bits.address, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:31]
  node _requestCIO_T_16 = cvt(_requestCIO_T_15) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:41]
  node _requestCIO_T_17 = and(_requestCIO_T_16, asSInt(UInt<1>(0h0))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestCIO_T_18 = asSInt(_requestCIO_T_17) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:46]
  node _requestCIO_T_19 = eq(_requestCIO_T_18, asSInt(UInt<1>(0h0))) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 137:59]
  node requestCIO_1_1 = or(UInt<1>(0h1), _requestCIO_T_19) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 308:107]
  node _requestBOI_uncommonBits_T = or(out[0].b.bits.source, UInt<5>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:29]
  node requestBOI_uncommonBits = bits(_requestBOI_uncommonBits_T, 4, 0) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:56]
  node _requestBOI_T = shr(out[0].b.bits.source, 5) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:10]
  node _requestBOI_T_1 = eq(_requestBOI_T, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:32]
  node _requestBOI_T_2 = leq(UInt<1>(0h0), requestBOI_uncommonBits) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 56:32]
  node _requestBOI_T_3 = and(_requestBOI_T_1, _requestBOI_T_2) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:67]
  node _requestBOI_T_4 = leq(requestBOI_uncommonBits, UInt<5>(0h1f)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 57:20]
  node requestBOI_0_0 = and(_requestBOI_T_3, _requestBOI_T_4) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 56:48]
  node _requestBOI_uncommonBits_T_1 = or(out[0].b.bits.source, UInt<2>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:29]
  node requestBOI_uncommonBits_1 = bits(_requestBOI_uncommonBits_T_1, 1, 0) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:56]
  node _requestBOI_T_5 = shr(out[0].b.bits.source, 2) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:10]
  node _requestBOI_T_6 = eq(_requestBOI_T_5, UInt<4>(0h8)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:32]
  node _requestBOI_T_7 = leq(UInt<1>(0h0), requestBOI_uncommonBits_1) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 56:32]
  node _requestBOI_T_8 = and(_requestBOI_T_6, _requestBOI_T_7) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:67]
  node _requestBOI_T_9 = leq(requestBOI_uncommonBits_1, UInt<2>(0h3)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 57:20]
  node requestBOI_0_1 = and(_requestBOI_T_8, _requestBOI_T_9) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 56:48]
  node _requestBOI_uncommonBits_T_2 = or(out[1].b.bits.source, UInt<5>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:29]
  node requestBOI_uncommonBits_2 = bits(_requestBOI_uncommonBits_T_2, 4, 0) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:56]
  node _requestBOI_T_10 = shr(out[1].b.bits.source, 5) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:10]
  node _requestBOI_T_11 = eq(_requestBOI_T_10, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:32]
  node _requestBOI_T_12 = leq(UInt<1>(0h0), requestBOI_uncommonBits_2) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 56:32]
  node _requestBOI_T_13 = and(_requestBOI_T_11, _requestBOI_T_12) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:67]
  node _requestBOI_T_14 = leq(requestBOI_uncommonBits_2, UInt<5>(0h1f)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 57:20]
  node requestBOI_1_0 = and(_requestBOI_T_13, _requestBOI_T_14) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 56:48]
  node _requestBOI_uncommonBits_T_3 = or(out[1].b.bits.source, UInt<2>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:29]
  node requestBOI_uncommonBits_3 = bits(_requestBOI_uncommonBits_T_3, 1, 0) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:56]
  node _requestBOI_T_15 = shr(out[1].b.bits.source, 2) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:10]
  node _requestBOI_T_16 = eq(_requestBOI_T_15, UInt<4>(0h8)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:32]
  node _requestBOI_T_17 = leq(UInt<1>(0h0), requestBOI_uncommonBits_3) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 56:32]
  node _requestBOI_T_18 = and(_requestBOI_T_16, _requestBOI_T_17) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:67]
  node _requestBOI_T_19 = leq(requestBOI_uncommonBits_3, UInt<2>(0h3)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 57:20]
  node requestBOI_1_1 = and(_requestBOI_T_18, _requestBOI_T_19) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 56:48]
  node _requestDOI_uncommonBits_T = or(out[0].d.bits.source, UInt<5>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:29]
  node requestDOI_uncommonBits = bits(_requestDOI_uncommonBits_T, 4, 0) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:56]
  node _requestDOI_T = shr(out[0].d.bits.source, 5) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:10]
  node _requestDOI_T_1 = eq(_requestDOI_T, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:32]
  node _requestDOI_T_2 = leq(UInt<1>(0h0), requestDOI_uncommonBits) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 56:32]
  node _requestDOI_T_3 = and(_requestDOI_T_1, _requestDOI_T_2) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:67]
  node _requestDOI_T_4 = leq(requestDOI_uncommonBits, UInt<5>(0h1f)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 57:20]
  node requestDOI_0_0 = and(_requestDOI_T_3, _requestDOI_T_4) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 56:48]
  node _requestDOI_uncommonBits_T_1 = or(out[0].d.bits.source, UInt<2>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:29]
  node requestDOI_uncommonBits_1 = bits(_requestDOI_uncommonBits_T_1, 1, 0) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:56]
  node _requestDOI_T_5 = shr(out[0].d.bits.source, 2) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:10]
  node _requestDOI_T_6 = eq(_requestDOI_T_5, UInt<4>(0h8)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:32]
  node _requestDOI_T_7 = leq(UInt<1>(0h0), requestDOI_uncommonBits_1) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 56:32]
  node _requestDOI_T_8 = and(_requestDOI_T_6, _requestDOI_T_7) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:67]
  node _requestDOI_T_9 = leq(requestDOI_uncommonBits_1, UInt<2>(0h3)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 57:20]
  node requestDOI_0_1 = and(_requestDOI_T_8, _requestDOI_T_9) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 56:48]
  node _requestDOI_uncommonBits_T_2 = or(out[1].d.bits.source, UInt<5>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:29]
  node requestDOI_uncommonBits_2 = bits(_requestDOI_uncommonBits_T_2, 4, 0) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:56]
  node _requestDOI_T_10 = shr(out[1].d.bits.source, 5) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:10]
  node _requestDOI_T_11 = eq(_requestDOI_T_10, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:32]
  node _requestDOI_T_12 = leq(UInt<1>(0h0), requestDOI_uncommonBits_2) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 56:32]
  node _requestDOI_T_13 = and(_requestDOI_T_11, _requestDOI_T_12) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:67]
  node _requestDOI_T_14 = leq(requestDOI_uncommonBits_2, UInt<5>(0h1f)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 57:20]
  node requestDOI_1_0 = and(_requestDOI_T_13, _requestDOI_T_14) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 56:48]
  node _requestDOI_uncommonBits_T_3 = or(out[1].d.bits.source, UInt<2>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:29]
  node requestDOI_uncommonBits_3 = bits(_requestDOI_uncommonBits_T_3, 1, 0) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:56]
  node _requestDOI_T_15 = shr(out[1].d.bits.source, 2) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:10]
  node _requestDOI_T_16 = eq(_requestDOI_T_15, UInt<4>(0h8)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:32]
  node _requestDOI_T_17 = leq(UInt<1>(0h0), requestDOI_uncommonBits_3) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 56:32]
  node _requestDOI_T_18 = and(_requestDOI_T_16, _requestDOI_T_17) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:67]
  node _requestDOI_T_19 = leq(requestDOI_uncommonBits_3, UInt<2>(0h3)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 57:20]
  node requestDOI_1_1 = and(_requestDOI_T_18, _requestDOI_T_19) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 56:48]
  node _requestEIO_uncommonBits_T = or(in[0].e.bits.sink, UInt<3>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:29]
  node requestEIO_uncommonBits = bits(_requestEIO_uncommonBits_T, 2, 0) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:56]
  node _requestEIO_T = shr(in[0].e.bits.sink, 3) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:10]
  node _requestEIO_T_1 = eq(_requestEIO_T, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:32]
  node _requestEIO_T_2 = leq(UInt<1>(0h0), requestEIO_uncommonBits) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 56:32]
  node _requestEIO_T_3 = and(_requestEIO_T_1, _requestEIO_T_2) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:67]
  node _requestEIO_T_4 = leq(requestEIO_uncommonBits, UInt<3>(0h7)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 57:20]
  node requestEIO_0_1 = and(_requestEIO_T_3, _requestEIO_T_4) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 56:48]
  node _requestEIO_uncommonBits_T_1 = or(in[1].e.bits.sink, UInt<3>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:29]
  node requestEIO_uncommonBits_1 = bits(_requestEIO_uncommonBits_T_1, 2, 0) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:56]
  node _requestEIO_T_5 = shr(in[1].e.bits.sink, 3) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:10]
  node _requestEIO_T_6 = eq(_requestEIO_T_5, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:32]
  node _requestEIO_T_7 = leq(UInt<1>(0h0), requestEIO_uncommonBits_1) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 56:32]
  node _requestEIO_T_8 = and(_requestEIO_T_6, _requestEIO_T_7) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 54:67]
  node _requestEIO_T_9 = leq(requestEIO_uncommonBits_1, UInt<3>(0h7)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 57:20]
  node requestEIO_1_1 = and(_requestEIO_T_8, _requestEIO_T_9) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 56:48]
  node _beatsAI_decode_T = dshl(UInt<12>(0hfff), in[0].a.bits.size) @[generators/rocket-chip/src/main/scala/util/package.scala 243:71]
  node _beatsAI_decode_T_1 = bits(_beatsAI_decode_T, 11, 0) @[generators/rocket-chip/src/main/scala/util/package.scala 243:76]
  node _beatsAI_decode_T_2 = not(_beatsAI_decode_T_1) @[generators/rocket-chip/src/main/scala/util/package.scala 243:46]
  node beatsAI_decode = shr(_beatsAI_decode_T_2, 3) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 220:59]
  node _beatsAI_opdata_T = bits(in[0].a.bits.opcode, 2, 2) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 92:37]
  node beatsAI_opdata = eq(_beatsAI_opdata_T, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 92:28]
  node beatsAI_0 = mux(beatsAI_opdata, beatsAI_decode, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 221:14]
  node _beatsAI_decode_T_3 = dshl(UInt<12>(0hfff), in[1].a.bits.size) @[generators/rocket-chip/src/main/scala/util/package.scala 243:71]
  node _beatsAI_decode_T_4 = bits(_beatsAI_decode_T_3, 11, 0) @[generators/rocket-chip/src/main/scala/util/package.scala 243:76]
  node _beatsAI_decode_T_5 = not(_beatsAI_decode_T_4) @[generators/rocket-chip/src/main/scala/util/package.scala 243:46]
  node beatsAI_decode_1 = shr(_beatsAI_decode_T_5, 3) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 220:59]
  node _beatsAI_opdata_T_1 = bits(in[1].a.bits.opcode, 2, 2) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 92:37]
  node beatsAI_opdata_1 = eq(_beatsAI_opdata_T_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 92:28]
  node beatsAI_1 = mux(beatsAI_opdata_1, beatsAI_decode_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 221:14]
  node _beatsBO_decode_T = dshl(UInt<12>(0hfff), out[0].b.bits.size) @[generators/rocket-chip/src/main/scala/util/package.scala 243:71]
  node _beatsBO_decode_T_1 = bits(_beatsBO_decode_T, 11, 0) @[generators/rocket-chip/src/main/scala/util/package.scala 243:76]
  node _beatsBO_decode_T_2 = not(_beatsBO_decode_T_1) @[generators/rocket-chip/src/main/scala/util/package.scala 243:46]
  node beatsBO_decode = shr(_beatsBO_decode_T_2, 3) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 220:59]
  node _beatsBO_opdata_T = bits(out[0].b.bits.opcode, 2, 2) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 97:37]
  node beatsBO_opdata = eq(_beatsBO_opdata_T, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 97:28]
  node beatsBO_0 = mux(UInt<1>(0h0), beatsBO_decode, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 221:14]
  node _beatsBO_decode_T_3 = dshl(UInt<6>(0h3f), out[1].b.bits.size) @[generators/rocket-chip/src/main/scala/util/package.scala 243:71]
  node _beatsBO_decode_T_4 = bits(_beatsBO_decode_T_3, 5, 0) @[generators/rocket-chip/src/main/scala/util/package.scala 243:76]
  node _beatsBO_decode_T_5 = not(_beatsBO_decode_T_4) @[generators/rocket-chip/src/main/scala/util/package.scala 243:46]
  node beatsBO_decode_1 = shr(_beatsBO_decode_T_5, 3) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 220:59]
  node _beatsBO_opdata_T_1 = bits(out[1].b.bits.opcode, 2, 2) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 97:37]
  node beatsBO_opdata_1 = eq(_beatsBO_opdata_T_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 97:28]
  node beatsBO_1 = mux(UInt<1>(0h0), beatsBO_decode_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 221:14]
  node _beatsCI_decode_T = dshl(UInt<12>(0hfff), in[0].c.bits.size) @[generators/rocket-chip/src/main/scala/util/package.scala 243:71]
  node _beatsCI_decode_T_1 = bits(_beatsCI_decode_T, 11, 0) @[generators/rocket-chip/src/main/scala/util/package.scala 243:76]
  node _beatsCI_decode_T_2 = not(_beatsCI_decode_T_1) @[generators/rocket-chip/src/main/scala/util/package.scala 243:46]
  node beatsCI_decode = shr(_beatsCI_decode_T_2, 3) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 220:59]
  node beatsCI_opdata = bits(in[0].c.bits.opcode, 0, 0) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 102:36]
  node beatsCI_0 = mux(UInt<1>(0h0), beatsCI_decode, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 221:14]
  node _beatsCI_decode_T_3 = dshl(UInt<12>(0hfff), in[1].c.bits.size) @[generators/rocket-chip/src/main/scala/util/package.scala 243:71]
  node _beatsCI_decode_T_4 = bits(_beatsCI_decode_T_3, 11, 0) @[generators/rocket-chip/src/main/scala/util/package.scala 243:76]
  node _beatsCI_decode_T_5 = not(_beatsCI_decode_T_4) @[generators/rocket-chip/src/main/scala/util/package.scala 243:46]
  node beatsCI_decode_1 = shr(_beatsCI_decode_T_5, 3) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 220:59]
  node beatsCI_opdata_1 = bits(in[1].c.bits.opcode, 0, 0) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 102:36]
  node beatsCI_1 = mux(beatsCI_opdata_1, beatsCI_decode_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 221:14]
  node _beatsDO_decode_T = dshl(UInt<12>(0hfff), out[0].d.bits.size) @[generators/rocket-chip/src/main/scala/util/package.scala 243:71]
  node _beatsDO_decode_T_1 = bits(_beatsDO_decode_T, 11, 0) @[generators/rocket-chip/src/main/scala/util/package.scala 243:76]
  node _beatsDO_decode_T_2 = not(_beatsDO_decode_T_1) @[generators/rocket-chip/src/main/scala/util/package.scala 243:46]
  node beatsDO_decode = shr(_beatsDO_decode_T_2, 3) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 220:59]
  node beatsDO_opdata = bits(out[0].d.bits.opcode, 0, 0) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 106:36]
  node beatsDO_0 = mux(beatsDO_opdata, beatsDO_decode, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 221:14]
  node _beatsDO_decode_T_3 = dshl(UInt<6>(0h3f), out[1].d.bits.size) @[generators/rocket-chip/src/main/scala/util/package.scala 243:71]
  node _beatsDO_decode_T_4 = bits(_beatsDO_decode_T_3, 5, 0) @[generators/rocket-chip/src/main/scala/util/package.scala 243:76]
  node _beatsDO_decode_T_5 = not(_beatsDO_decode_T_4) @[generators/rocket-chip/src/main/scala/util/package.scala 243:46]
  node beatsDO_decode_1 = shr(_beatsDO_decode_T_5, 3) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 220:59]
  node beatsDO_opdata_1 = bits(out[1].d.bits.opcode, 0, 0) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 106:36]
  node beatsDO_1 = mux(beatsDO_opdata_1, beatsDO_decode_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Edges.scala 221:14]
  wire portsAOI_filtered : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<6>, address : UInt<32>, user : { }, echo : { }, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}}[2] @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 352:24]
  connect portsAOI_filtered[0].bits, in[0].a.bits @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  node _portsAOI_filtered_0_valid_T = or(requestAIO_0_0, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:54]
  node _portsAOI_filtered_0_valid_T_1 = and(in[0].a.valid, _portsAOI_filtered_0_valid_T) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:40]
  connect portsAOI_filtered[0].valid, _portsAOI_filtered_0_valid_T_1 @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:25]
  connect portsAOI_filtered[1].bits, in[0].a.bits @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  node _portsAOI_filtered_1_valid_T = or(requestAIO_0_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:54]
  node _portsAOI_filtered_1_valid_T_1 = and(in[0].a.valid, _portsAOI_filtered_1_valid_T) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:40]
  connect portsAOI_filtered[1].valid, _portsAOI_filtered_1_valid_T_1 @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:25]
  node _portsAOI_in_0_a_ready_T = mux(requestAIO_0_0, portsAOI_filtered[0].ready, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _portsAOI_in_0_a_ready_T_1 = mux(requestAIO_0_1, portsAOI_filtered[1].ready, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _portsAOI_in_0_a_ready_T_2 = or(_portsAOI_in_0_a_ready_T, _portsAOI_in_0_a_ready_T_1) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _portsAOI_in_0_a_ready_WIRE : UInt<1> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _portsAOI_in_0_a_ready_WIRE, _portsAOI_in_0_a_ready_T_2 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect in[0].a.ready, _portsAOI_in_0_a_ready_WIRE @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 357:17]
  wire portsAOI_filtered_1 : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<6>, address : UInt<32>, user : { }, echo : { }, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}}[2] @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 352:24]
  connect portsAOI_filtered_1[0].bits, in[1].a.bits @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  node _portsAOI_filtered_0_valid_T_2 = or(requestAIO_1_0, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:54]
  node _portsAOI_filtered_0_valid_T_3 = and(in[1].a.valid, _portsAOI_filtered_0_valid_T_2) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:40]
  connect portsAOI_filtered_1[0].valid, _portsAOI_filtered_0_valid_T_3 @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:25]
  connect portsAOI_filtered_1[1].bits, in[1].a.bits @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  node _portsAOI_filtered_1_valid_T_2 = or(requestAIO_1_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:54]
  node _portsAOI_filtered_1_valid_T_3 = and(in[1].a.valid, _portsAOI_filtered_1_valid_T_2) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:40]
  connect portsAOI_filtered_1[1].valid, _portsAOI_filtered_1_valid_T_3 @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:25]
  node _portsAOI_in_1_a_ready_T = mux(requestAIO_1_0, portsAOI_filtered_1[0].ready, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _portsAOI_in_1_a_ready_T_1 = mux(requestAIO_1_1, portsAOI_filtered_1[1].ready, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _portsAOI_in_1_a_ready_T_2 = or(_portsAOI_in_1_a_ready_T, _portsAOI_in_1_a_ready_T_1) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _portsAOI_in_1_a_ready_WIRE : UInt<1> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _portsAOI_in_1_a_ready_WIRE, _portsAOI_in_1_a_ready_T_2 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect in[1].a.ready, _portsAOI_in_1_a_ready_WIRE @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 357:17]
  wire portsBIO_filtered : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<6>, address : UInt<32>, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}}[2] @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 352:24]
  connect portsBIO_filtered[0].bits.corrupt, out[0].b.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered[0].bits.data, out[0].b.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered[0].bits.mask, out[0].b.bits.mask @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered[0].bits.address, out[0].b.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered[0].bits.source, out[0].b.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered[0].bits.size, out[0].b.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered[0].bits.param, out[0].b.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered[0].bits.opcode, out[0].b.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  node _portsBIO_filtered_0_valid_T = or(requestBOI_0_0, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:54]
  node _portsBIO_filtered_0_valid_T_1 = and(out[0].b.valid, _portsBIO_filtered_0_valid_T) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:40]
  connect portsBIO_filtered[0].valid, _portsBIO_filtered_0_valid_T_1 @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:25]
  connect portsBIO_filtered[1].bits.corrupt, out[0].b.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered[1].bits.data, out[0].b.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered[1].bits.mask, out[0].b.bits.mask @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered[1].bits.address, out[0].b.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered[1].bits.source, out[0].b.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered[1].bits.size, out[0].b.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered[1].bits.param, out[0].b.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered[1].bits.opcode, out[0].b.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  node _portsBIO_filtered_1_valid_T = or(requestBOI_0_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:54]
  node _portsBIO_filtered_1_valid_T_1 = and(out[0].b.valid, _portsBIO_filtered_1_valid_T) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:40]
  connect portsBIO_filtered[1].valid, _portsBIO_filtered_1_valid_T_1 @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:25]
  node _portsBIO_out_0_b_ready_T = mux(requestBOI_0_0, portsBIO_filtered[0].ready, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _portsBIO_out_0_b_ready_T_1 = mux(requestBOI_0_1, portsBIO_filtered[1].ready, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _portsBIO_out_0_b_ready_T_2 = or(_portsBIO_out_0_b_ready_T, _portsBIO_out_0_b_ready_T_1) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _portsBIO_out_0_b_ready_WIRE : UInt<1> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _portsBIO_out_0_b_ready_WIRE, _portsBIO_out_0_b_ready_T_2 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect out[0].b.ready, _portsBIO_out_0_b_ready_WIRE @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 357:17]
  wire portsBIO_filtered_1 : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<6>, address : UInt<32>, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}}[2] @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 352:24]
  connect portsBIO_filtered_1[0].bits.corrupt, out[1].b.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered_1[0].bits.data, out[1].b.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered_1[0].bits.mask, out[1].b.bits.mask @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered_1[0].bits.address, out[1].b.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered_1[0].bits.source, out[1].b.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered_1[0].bits.size, out[1].b.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered_1[0].bits.param, out[1].b.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered_1[0].bits.opcode, out[1].b.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  node _portsBIO_filtered_0_valid_T_2 = or(requestBOI_1_0, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:54]
  node _portsBIO_filtered_0_valid_T_3 = and(out[1].b.valid, _portsBIO_filtered_0_valid_T_2) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:40]
  connect portsBIO_filtered_1[0].valid, _portsBIO_filtered_0_valid_T_3 @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:25]
  connect portsBIO_filtered_1[1].bits.corrupt, out[1].b.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered_1[1].bits.data, out[1].b.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered_1[1].bits.mask, out[1].b.bits.mask @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered_1[1].bits.address, out[1].b.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered_1[1].bits.source, out[1].b.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered_1[1].bits.size, out[1].b.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered_1[1].bits.param, out[1].b.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsBIO_filtered_1[1].bits.opcode, out[1].b.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  node _portsBIO_filtered_1_valid_T_2 = or(requestBOI_1_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:54]
  node _portsBIO_filtered_1_valid_T_3 = and(out[1].b.valid, _portsBIO_filtered_1_valid_T_2) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:40]
  connect portsBIO_filtered_1[1].valid, _portsBIO_filtered_1_valid_T_3 @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:25]
  node _portsBIO_out_1_b_ready_T = mux(requestBOI_1_0, portsBIO_filtered_1[0].ready, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _portsBIO_out_1_b_ready_T_1 = mux(requestBOI_1_1, portsBIO_filtered_1[1].ready, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _portsBIO_out_1_b_ready_T_2 = or(_portsBIO_out_1_b_ready_T, _portsBIO_out_1_b_ready_T_1) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _portsBIO_out_1_b_ready_WIRE : UInt<1> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _portsBIO_out_1_b_ready_WIRE, _portsBIO_out_1_b_ready_T_2 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect out[1].b.ready, _portsBIO_out_1_b_ready_WIRE @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 357:17]
  wire portsCOI_filtered : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<6>, address : UInt<32>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}}[2] @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 352:24]
  connect portsCOI_filtered[0].bits, in[0].c.bits @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  node _portsCOI_filtered_0_valid_T = or(requestCIO_0_0, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:54]
  node _portsCOI_filtered_0_valid_T_1 = and(in[0].c.valid, _portsCOI_filtered_0_valid_T) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:40]
  connect portsCOI_filtered[0].valid, _portsCOI_filtered_0_valid_T_1 @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:25]
  connect portsCOI_filtered[1].bits, in[0].c.bits @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  node _portsCOI_filtered_1_valid_T = or(requestCIO_0_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:54]
  node _portsCOI_filtered_1_valid_T_1 = and(in[0].c.valid, _portsCOI_filtered_1_valid_T) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:40]
  connect portsCOI_filtered[1].valid, _portsCOI_filtered_1_valid_T_1 @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:25]
  node _portsCOI_in_0_c_ready_T = mux(requestCIO_0_0, portsCOI_filtered[0].ready, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _portsCOI_in_0_c_ready_T_1 = mux(requestCIO_0_1, portsCOI_filtered[1].ready, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _portsCOI_in_0_c_ready_T_2 = or(_portsCOI_in_0_c_ready_T, _portsCOI_in_0_c_ready_T_1) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _portsCOI_in_0_c_ready_WIRE : UInt<1> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _portsCOI_in_0_c_ready_WIRE, _portsCOI_in_0_c_ready_T_2 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect in[0].c.ready, _portsCOI_in_0_c_ready_WIRE @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 357:17]
  wire portsCOI_filtered_1 : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<6>, address : UInt<32>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}}[2] @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 352:24]
  connect portsCOI_filtered_1[0].bits, in[1].c.bits @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  node _portsCOI_filtered_0_valid_T_2 = or(requestCIO_1_0, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:54]
  node _portsCOI_filtered_0_valid_T_3 = and(in[1].c.valid, _portsCOI_filtered_0_valid_T_2) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:40]
  connect portsCOI_filtered_1[0].valid, _portsCOI_filtered_0_valid_T_3 @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:25]
  connect portsCOI_filtered_1[1].bits, in[1].c.bits @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  node _portsCOI_filtered_1_valid_T_2 = or(requestCIO_1_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:54]
  node _portsCOI_filtered_1_valid_T_3 = and(in[1].c.valid, _portsCOI_filtered_1_valid_T_2) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:40]
  connect portsCOI_filtered_1[1].valid, _portsCOI_filtered_1_valid_T_3 @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:25]
  node _portsCOI_in_1_c_ready_T = mux(requestCIO_1_0, portsCOI_filtered_1[0].ready, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _portsCOI_in_1_c_ready_T_1 = mux(requestCIO_1_1, portsCOI_filtered_1[1].ready, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _portsCOI_in_1_c_ready_T_2 = or(_portsCOI_in_1_c_ready_T, _portsCOI_in_1_c_ready_T_1) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _portsCOI_in_1_c_ready_WIRE : UInt<1> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _portsCOI_in_1_c_ready_WIRE, _portsCOI_in_1_c_ready_T_2 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect in[1].c.ready, _portsCOI_in_1_c_ready_WIRE @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 357:17]
  wire portsDIO_filtered : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<6>, sink : UInt<3>, denied : UInt<1>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}}[2] @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 352:24]
  connect portsDIO_filtered[0].bits.corrupt, out[0].d.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered[0].bits.data, out[0].d.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered[0].bits.denied, out[0].d.bits.denied @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered[0].bits.sink, out[0].d.bits.sink @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered[0].bits.source, out[0].d.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered[0].bits.size, out[0].d.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered[0].bits.param, out[0].d.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered[0].bits.opcode, out[0].d.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  node _portsDIO_filtered_0_valid_T = or(requestDOI_0_0, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:54]
  node _portsDIO_filtered_0_valid_T_1 = and(out[0].d.valid, _portsDIO_filtered_0_valid_T) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:40]
  connect portsDIO_filtered[0].valid, _portsDIO_filtered_0_valid_T_1 @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:25]
  connect portsDIO_filtered[1].bits.corrupt, out[0].d.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered[1].bits.data, out[0].d.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered[1].bits.denied, out[0].d.bits.denied @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered[1].bits.sink, out[0].d.bits.sink @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered[1].bits.source, out[0].d.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered[1].bits.size, out[0].d.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered[1].bits.param, out[0].d.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered[1].bits.opcode, out[0].d.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  node _portsDIO_filtered_1_valid_T = or(requestDOI_0_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:54]
  node _portsDIO_filtered_1_valid_T_1 = and(out[0].d.valid, _portsDIO_filtered_1_valid_T) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:40]
  connect portsDIO_filtered[1].valid, _portsDIO_filtered_1_valid_T_1 @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:25]
  node _portsDIO_out_0_d_ready_T = mux(requestDOI_0_0, portsDIO_filtered[0].ready, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _portsDIO_out_0_d_ready_T_1 = mux(requestDOI_0_1, portsDIO_filtered[1].ready, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _portsDIO_out_0_d_ready_T_2 = or(_portsDIO_out_0_d_ready_T, _portsDIO_out_0_d_ready_T_1) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _portsDIO_out_0_d_ready_WIRE : UInt<1> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _portsDIO_out_0_d_ready_WIRE, _portsDIO_out_0_d_ready_T_2 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect out[0].d.ready, _portsDIO_out_0_d_ready_WIRE @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 357:17]
  wire portsDIO_filtered_1 : { flip ready : UInt<1>, valid : UInt<1>, bits : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<6>, sink : UInt<3>, denied : UInt<1>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>}}[2] @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 352:24]
  connect portsDIO_filtered_1[0].bits.corrupt, out[1].d.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered_1[0].bits.data, out[1].d.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered_1[0].bits.denied, out[1].d.bits.denied @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered_1[0].bits.sink, out[1].d.bits.sink @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered_1[0].bits.source, out[1].d.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered_1[0].bits.size, out[1].d.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered_1[0].bits.param, out[1].d.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered_1[0].bits.opcode, out[1].d.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  node _portsDIO_filtered_0_valid_T_2 = or(requestDOI_1_0, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:54]
  node _portsDIO_filtered_0_valid_T_3 = and(out[1].d.valid, _portsDIO_filtered_0_valid_T_2) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:40]
  connect portsDIO_filtered_1[0].valid, _portsDIO_filtered_0_valid_T_3 @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:25]
  connect portsDIO_filtered_1[1].bits.corrupt, out[1].d.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered_1[1].bits.data, out[1].d.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered_1[1].bits.denied, out[1].d.bits.denied @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered_1[1].bits.sink, out[1].d.bits.sink @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered_1[1].bits.source, out[1].d.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered_1[1].bits.size, out[1].d.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered_1[1].bits.param, out[1].d.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  connect portsDIO_filtered_1[1].bits.opcode, out[1].d.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  node _portsDIO_filtered_1_valid_T_2 = or(requestDOI_1_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:54]
  node _portsDIO_filtered_1_valid_T_3 = and(out[1].d.valid, _portsDIO_filtered_1_valid_T_2) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:40]
  connect portsDIO_filtered_1[1].valid, _portsDIO_filtered_1_valid_T_3 @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:25]
  node _portsDIO_out_1_d_ready_T = mux(requestDOI_1_0, portsDIO_filtered_1[0].ready, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _portsDIO_out_1_d_ready_T_1 = mux(requestDOI_1_1, portsDIO_filtered_1[1].ready, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _portsDIO_out_1_d_ready_T_2 = or(_portsDIO_out_1_d_ready_T, _portsDIO_out_1_d_ready_T_1) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _portsDIO_out_1_d_ready_WIRE : UInt<1> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _portsDIO_out_1_d_ready_WIRE, _portsDIO_out_1_d_ready_T_2 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect out[1].d.ready, _portsDIO_out_1_d_ready_WIRE @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 357:17]
  wire portsEOI_filtered : { flip ready : UInt<1>, valid : UInt<1>, bits : { sink : UInt<3>}}[2] @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 352:24]
  connect portsEOI_filtered[0].bits, in[0].e.bits @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  node _portsEOI_filtered_0_valid_T = or(UInt<1>(0h0), UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:54]
  node _portsEOI_filtered_0_valid_T_1 = and(in[0].e.valid, _portsEOI_filtered_0_valid_T) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:40]
  connect portsEOI_filtered[0].valid, _portsEOI_filtered_0_valid_T_1 @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:25]
  connect portsEOI_filtered[1].bits, in[0].e.bits @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  node _portsEOI_filtered_1_valid_T = or(requestEIO_0_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:54]
  node _portsEOI_filtered_1_valid_T_1 = and(in[0].e.valid, _portsEOI_filtered_1_valid_T) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:40]
  connect portsEOI_filtered[1].valid, _portsEOI_filtered_1_valid_T_1 @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:25]
  node _portsEOI_in_0_e_ready_T = mux(UInt<1>(0h0), portsEOI_filtered[0].ready, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _portsEOI_in_0_e_ready_T_1 = mux(requestEIO_0_1, portsEOI_filtered[1].ready, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _portsEOI_in_0_e_ready_T_2 = or(_portsEOI_in_0_e_ready_T, _portsEOI_in_0_e_ready_T_1) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _portsEOI_in_0_e_ready_WIRE : UInt<1> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _portsEOI_in_0_e_ready_WIRE, _portsEOI_in_0_e_ready_T_2 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect in[0].e.ready, _portsEOI_in_0_e_ready_WIRE @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 357:17]
  wire portsEOI_filtered_1 : { flip ready : UInt<1>, valid : UInt<1>, bits : { sink : UInt<3>}}[2] @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 352:24]
  connect portsEOI_filtered_1[0].bits, in[1].e.bits @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  node _portsEOI_filtered_0_valid_T_2 = or(UInt<1>(0h0), UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:54]
  node _portsEOI_filtered_0_valid_T_3 = and(in[1].e.valid, _portsEOI_filtered_0_valid_T_2) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:40]
  connect portsEOI_filtered_1[0].valid, _portsEOI_filtered_0_valid_T_3 @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:25]
  connect portsEOI_filtered_1[1].bits, in[1].e.bits @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 354:24]
  node _portsEOI_filtered_1_valid_T_2 = or(requestEIO_1_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:54]
  node _portsEOI_filtered_1_valid_T_3 = and(in[1].e.valid, _portsEOI_filtered_1_valid_T_2) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:40]
  connect portsEOI_filtered_1[1].valid, _portsEOI_filtered_1_valid_T_3 @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 355:25]
  node _portsEOI_in_1_e_ready_T = mux(UInt<1>(0h0), portsEOI_filtered_1[0].ready, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _portsEOI_in_1_e_ready_T_1 = mux(requestEIO_1_1, portsEOI_filtered_1[1].ready, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _portsEOI_in_1_e_ready_T_2 = or(_portsEOI_in_1_e_ready_T, _portsEOI_in_1_e_ready_T_1) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _portsEOI_in_1_e_ready_WIRE : UInt<1> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _portsEOI_in_1_e_ready_WIRE, _portsEOI_in_1_e_ready_T_2 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect in[1].e.ready, _portsEOI_in_1_e_ready_WIRE @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 357:17]
  regreset beatsLeft : UInt, clock, reset, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 60:30]
  node idle = eq(beatsLeft, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 61:28]
  node latch = and(idle, out[0].a.ready) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 62:24]
  node _readys_T = cat(portsAOI_filtered_1[0].valid, portsAOI_filtered[0].valid) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 68:51]
  node readys_valid = bits(_readys_T, 1, 0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 21:23]
  node _readys_T_1 = eq(readys_valid, _readys_T) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:19]
  node _readys_T_2 = asUInt(reset) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
  node _readys_T_3 = eq(_readys_T_2, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
  when _readys_T_3 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
    node _readys_T_4 = eq(_readys_T_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
    when _readys_T_4 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
      printf(clock, UInt<1>(0h1), "Assertion failed\n    at Arbiter.scala:22 assert (valid === valids)\n") : readys_printf @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
    assert(clock, _readys_T_1, UInt<1>(0h1), "") : readys_assert @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
  regreset readys_mask : UInt<2>, clock, reset, UInt<2>(0h3) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 23:23]
  node _readys_filter_T = not(readys_mask) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 24:30]
  node _readys_filter_T_1 = and(readys_valid, _readys_filter_T) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 24:28]
  node readys_filter = cat(_readys_filter_T_1, readys_valid) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 24:21]
  node _readys_unready_T = shr(readys_filter, 1) @[generators/rocket-chip/src/main/scala/util/package.scala 262:48]
  node _readys_unready_T_1 = or(readys_filter, _readys_unready_T) @[generators/rocket-chip/src/main/scala/util/package.scala 262:43]
  node _readys_unready_T_2 = bits(_readys_unready_T_1, 3, 0) @[generators/rocket-chip/src/main/scala/util/package.scala 263:17]
  node _readys_unready_T_3 = shr(_readys_unready_T_2, 1) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 25:52]
  node _readys_unready_T_4 = shl(readys_mask, 2) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 25:66]
  node readys_unready = or(_readys_unready_T_3, _readys_unready_T_4) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 25:58]
  node _readys_readys_T = shr(readys_unready, 2) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 26:29]
  node _readys_readys_T_1 = bits(readys_unready, 1, 0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 26:48]
  node _readys_readys_T_2 = and(_readys_readys_T, _readys_readys_T_1) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 26:39]
  node readys_readys = not(_readys_readys_T_2) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 26:18]
  node _readys_T_5 = orr(readys_valid) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 27:27]
  node _readys_T_6 = and(latch, _readys_T_5) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 27:18]
  when _readys_T_6 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 27:32]
    node _readys_mask_T = and(readys_readys, readys_valid) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 28:29]
    node _readys_mask_T_1 = shl(_readys_mask_T, 1) @[generators/rocket-chip/src/main/scala/util/package.scala 253:48]
    node _readys_mask_T_2 = bits(_readys_mask_T_1, 1, 0) @[generators/rocket-chip/src/main/scala/util/package.scala 253:53]
    node _readys_mask_T_3 = or(_readys_mask_T, _readys_mask_T_2) @[generators/rocket-chip/src/main/scala/util/package.scala 253:43]
    node _readys_mask_T_4 = bits(_readys_mask_T_3, 1, 0) @[generators/rocket-chip/src/main/scala/util/package.scala 254:17]
    connect readys_mask, _readys_mask_T_4 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 28:12]
  node _readys_T_7 = bits(readys_readys, 1, 0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 30:11]
  node _readys_T_8 = bits(_readys_T_7, 0, 0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 68:76]
  node _readys_T_9 = bits(_readys_T_7, 1, 1) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 68:76]
  wire readys : UInt<1>[2] @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 68:27]
  connect readys[0], _readys_T_8 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 68:27]
  connect readys[1], _readys_T_9 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 68:27]
  node _winner_T = and(readys[0], portsAOI_filtered[0].valid) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 71:69]
  node _winner_T_1 = and(readys[1], portsAOI_filtered_1[0].valid) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 71:69]
  wire winner : UInt<1>[2] @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 71:27]
  connect winner[0], _winner_T @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 71:27]
  connect winner[1], _winner_T_1 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 71:27]
  node prefixOR_1 = or(UInt<1>(0h0), winner[0]) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 76:48]
  node _prefixOR_T = or(prefixOR_1, winner[1]) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 76:48]
  node _T = eq(UInt<1>(0h0), UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:56]
  node _T_1 = eq(winner[0], UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:62]
  node _T_2 = or(_T, _T_1) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:59]
  node _T_3 = eq(prefixOR_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:56]
  node _T_4 = eq(winner[1], UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:62]
  node _T_5 = or(_T_3, _T_4) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:59]
  node _T_6 = and(_T_2, _T_5) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:77]
  node _T_7 = asUInt(reset) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
  node _T_8 = eq(_T_7, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
  when _T_8 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
    node _T_9 = eq(_T_6, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
    when _T_9 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
      printf(clock, UInt<1>(0h1), "Assertion failed\n    at Arbiter.scala:77 assert((prefixOR zip winner) map { case (p,w) => !p || !w } reduce {_ && _})\n") : printf @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
    assert(clock, _T_6, UInt<1>(0h1), "") : assert @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
  node _T_10 = or(portsAOI_filtered[0].valid, portsAOI_filtered_1[0].valid) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:31]
  node _T_11 = eq(_T_10, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:15]
  node _T_12 = or(winner[0], winner[1]) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:54]
  node _T_13 = or(_T_11, _T_12) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:36]
  node _T_14 = asUInt(reset) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
  node _T_15 = eq(_T_14, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
  when _T_15 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
    node _T_16 = eq(_T_13, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
    when _T_16 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
      printf(clock, UInt<1>(0h1), "Assertion failed\n    at Arbiter.scala:79 assert (!valids.reduce(_||_) || winner.reduce(_||_))\n") : printf_1 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
    assert(clock, _T_13, UInt<1>(0h1), "") : assert_1 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
  node maskedBeats_0 = mux(winner[0], beatsAI_0, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 82:69]
  node maskedBeats_1 = mux(winner[1], beatsAI_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 82:69]
  node initBeats = or(maskedBeats_0, maskedBeats_1) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 84:44]
  node _beatsLeft_T = and(out[0].a.ready, out[0].a.valid) @[src/main/scala/chisel3/util/Decoupled.scala 51:35]
  node _beatsLeft_T_1 = sub(beatsLeft, _beatsLeft_T) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 85:52]
  node _beatsLeft_T_2 = tail(_beatsLeft_T_1, 1) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 85:52]
  node _beatsLeft_T_3 = mux(latch, initBeats, _beatsLeft_T_2) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 85:23]
  connect beatsLeft, _beatsLeft_T_3 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 85:17]
  wire _state_WIRE : UInt<1>[2] @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 88:34]
  connect _state_WIRE[0], UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 88:34]
  connect _state_WIRE[1], UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 88:34]
  regreset state : UInt<1>[2], clock, reset, _state_WIRE @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 88:26]
  node muxState = mux(idle, winner, state) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 89:25]
  connect state, muxState @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 90:13]
  node allowed = mux(idle, readys, state) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 92:24]
  node _filtered_0_ready_T = and(out[0].a.ready, allowed[0]) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 94:31]
  connect portsAOI_filtered[0].ready, _filtered_0_ready_T @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 94:17]
  node _filtered_0_ready_T_1 = and(out[0].a.ready, allowed[1]) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 94:31]
  connect portsAOI_filtered_1[0].ready, _filtered_0_ready_T_1 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 94:17]
  node _out_0_a_valid_T = or(portsAOI_filtered[0].valid, portsAOI_filtered_1[0].valid) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 96:46]
  node _out_0_a_valid_T_1 = mux(state[0], portsAOI_filtered[0].valid, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_valid_T_2 = mux(state[1], portsAOI_filtered_1[0].valid, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_valid_T_3 = or(_out_0_a_valid_T_1, _out_0_a_valid_T_2) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _out_0_a_valid_WIRE : UInt<1> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_0_a_valid_WIRE, _out_0_a_valid_T_3 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_valid_T_4 = mux(idle, _out_0_a_valid_T, _out_0_a_valid_WIRE) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 96:24]
  connect out[0].a.valid, _out_0_a_valid_T_4 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 96:18]
  wire _out_0_a_bits_WIRE : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<6>, address : UInt<32>, user : { }, echo : { }, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>} @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_bits_T = mux(muxState[0], portsAOI_filtered[0].bits.corrupt, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_bits_T_1 = mux(muxState[1], portsAOI_filtered_1[0].bits.corrupt, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_bits_T_2 = or(_out_0_a_bits_T, _out_0_a_bits_T_1) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _out_0_a_bits_WIRE_1 : UInt<1> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_0_a_bits_WIRE_1, _out_0_a_bits_T_2 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_0_a_bits_WIRE.corrupt, _out_0_a_bits_WIRE_1 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_bits_T_3 = mux(muxState[0], portsAOI_filtered[0].bits.data, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_bits_T_4 = mux(muxState[1], portsAOI_filtered_1[0].bits.data, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_bits_T_5 = or(_out_0_a_bits_T_3, _out_0_a_bits_T_4) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _out_0_a_bits_WIRE_2 : UInt<64> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_0_a_bits_WIRE_2, _out_0_a_bits_T_5 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_0_a_bits_WIRE.data, _out_0_a_bits_WIRE_2 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_bits_T_6 = mux(muxState[0], portsAOI_filtered[0].bits.mask, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_bits_T_7 = mux(muxState[1], portsAOI_filtered_1[0].bits.mask, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_bits_T_8 = or(_out_0_a_bits_T_6, _out_0_a_bits_T_7) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _out_0_a_bits_WIRE_3 : UInt<8> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_0_a_bits_WIRE_3, _out_0_a_bits_T_8 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_0_a_bits_WIRE.mask, _out_0_a_bits_WIRE_3 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _out_0_a_bits_WIRE_4 : { } @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_0_a_bits_WIRE.echo, _out_0_a_bits_WIRE_4 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _out_0_a_bits_WIRE_5 : { } @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_0_a_bits_WIRE.user, _out_0_a_bits_WIRE_5 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_bits_T_9 = mux(muxState[0], portsAOI_filtered[0].bits.address, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_bits_T_10 = mux(muxState[1], portsAOI_filtered_1[0].bits.address, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_bits_T_11 = or(_out_0_a_bits_T_9, _out_0_a_bits_T_10) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _out_0_a_bits_WIRE_6 : UInt<32> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_0_a_bits_WIRE_6, _out_0_a_bits_T_11 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_0_a_bits_WIRE.address, _out_0_a_bits_WIRE_6 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_bits_T_12 = mux(muxState[0], portsAOI_filtered[0].bits.source, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_bits_T_13 = mux(muxState[1], portsAOI_filtered_1[0].bits.source, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_bits_T_14 = or(_out_0_a_bits_T_12, _out_0_a_bits_T_13) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _out_0_a_bits_WIRE_7 : UInt<6> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_0_a_bits_WIRE_7, _out_0_a_bits_T_14 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_0_a_bits_WIRE.source, _out_0_a_bits_WIRE_7 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_bits_T_15 = mux(muxState[0], portsAOI_filtered[0].bits.size, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_bits_T_16 = mux(muxState[1], portsAOI_filtered_1[0].bits.size, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_bits_T_17 = or(_out_0_a_bits_T_15, _out_0_a_bits_T_16) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _out_0_a_bits_WIRE_8 : UInt<4> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_0_a_bits_WIRE_8, _out_0_a_bits_T_17 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_0_a_bits_WIRE.size, _out_0_a_bits_WIRE_8 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_bits_T_18 = mux(muxState[0], portsAOI_filtered[0].bits.param, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_bits_T_19 = mux(muxState[1], portsAOI_filtered_1[0].bits.param, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_bits_T_20 = or(_out_0_a_bits_T_18, _out_0_a_bits_T_19) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _out_0_a_bits_WIRE_9 : UInt<3> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_0_a_bits_WIRE_9, _out_0_a_bits_T_20 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_0_a_bits_WIRE.param, _out_0_a_bits_WIRE_9 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_bits_T_21 = mux(muxState[0], portsAOI_filtered[0].bits.opcode, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_bits_T_22 = mux(muxState[1], portsAOI_filtered_1[0].bits.opcode, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_0_a_bits_T_23 = or(_out_0_a_bits_T_21, _out_0_a_bits_T_22) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _out_0_a_bits_WIRE_10 : UInt<3> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_0_a_bits_WIRE_10, _out_0_a_bits_T_23 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_0_a_bits_WIRE.opcode, _out_0_a_bits_WIRE_10 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect out[0].a.bits.corrupt, _out_0_a_bits_WIRE.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect out[0].a.bits.data, _out_0_a_bits_WIRE.data @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect out[0].a.bits.mask, _out_0_a_bits_WIRE.mask @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect out[0].a.bits.address, _out_0_a_bits_WIRE.address @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect out[0].a.bits.source, _out_0_a_bits_WIRE.source @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect out[0].a.bits.size, _out_0_a_bits_WIRE.size @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect out[0].a.bits.param, _out_0_a_bits_WIRE.param @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect out[0].a.bits.opcode, _out_0_a_bits_WIRE.opcode @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  invalidate out[0].c.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 51:23]
  invalidate out[0].c.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 51:23]
  invalidate out[0].c.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 51:23]
  invalidate out[0].c.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 51:23]
  invalidate out[0].c.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 51:23]
  invalidate out[0].c.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 51:23]
  invalidate out[0].c.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 51:23]
  invalidate out[0].e.bits.sink @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 51:23]
  connect portsCOI_filtered[0].ready, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 332:73]
  connect portsCOI_filtered_1[0].ready, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 332:73]
  connect portsEOI_filtered[0].ready, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 333:73]
  connect portsEOI_filtered_1[0].ready, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 333:73]
  regreset beatsLeft_1 : UInt, clock, reset, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 60:30]
  node idle_1 = eq(beatsLeft_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 61:28]
  node latch_1 = and(idle_1, out[1].a.ready) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 62:24]
  node _readys_T_10 = cat(portsAOI_filtered_1[1].valid, portsAOI_filtered[1].valid) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 68:51]
  node readys_valid_1 = bits(_readys_T_10, 1, 0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 21:23]
  node _readys_T_11 = eq(readys_valid_1, _readys_T_10) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:19]
  node _readys_T_12 = asUInt(reset) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
  node _readys_T_13 = eq(_readys_T_12, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
  when _readys_T_13 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
    node _readys_T_14 = eq(_readys_T_11, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
    when _readys_T_14 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
      printf(clock, UInt<1>(0h1), "Assertion failed\n    at Arbiter.scala:22 assert (valid === valids)\n") : readys_printf_1 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
    assert(clock, _readys_T_11, UInt<1>(0h1), "") : readys_assert_1 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
  regreset readys_mask_1 : UInt<2>, clock, reset, UInt<2>(0h3) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 23:23]
  node _readys_filter_T_2 = not(readys_mask_1) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 24:30]
  node _readys_filter_T_3 = and(readys_valid_1, _readys_filter_T_2) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 24:28]
  node readys_filter_1 = cat(_readys_filter_T_3, readys_valid_1) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 24:21]
  node _readys_unready_T_5 = shr(readys_filter_1, 1) @[generators/rocket-chip/src/main/scala/util/package.scala 262:48]
  node _readys_unready_T_6 = or(readys_filter_1, _readys_unready_T_5) @[generators/rocket-chip/src/main/scala/util/package.scala 262:43]
  node _readys_unready_T_7 = bits(_readys_unready_T_6, 3, 0) @[generators/rocket-chip/src/main/scala/util/package.scala 263:17]
  node _readys_unready_T_8 = shr(_readys_unready_T_7, 1) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 25:52]
  node _readys_unready_T_9 = shl(readys_mask_1, 2) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 25:66]
  node readys_unready_1 = or(_readys_unready_T_8, _readys_unready_T_9) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 25:58]
  node _readys_readys_T_3 = shr(readys_unready_1, 2) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 26:29]
  node _readys_readys_T_4 = bits(readys_unready_1, 1, 0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 26:48]
  node _readys_readys_T_5 = and(_readys_readys_T_3, _readys_readys_T_4) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 26:39]
  node readys_readys_1 = not(_readys_readys_T_5) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 26:18]
  node _readys_T_15 = orr(readys_valid_1) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 27:27]
  node _readys_T_16 = and(latch_1, _readys_T_15) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 27:18]
  when _readys_T_16 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 27:32]
    node _readys_mask_T_5 = and(readys_readys_1, readys_valid_1) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 28:29]
    node _readys_mask_T_6 = shl(_readys_mask_T_5, 1) @[generators/rocket-chip/src/main/scala/util/package.scala 253:48]
    node _readys_mask_T_7 = bits(_readys_mask_T_6, 1, 0) @[generators/rocket-chip/src/main/scala/util/package.scala 253:53]
    node _readys_mask_T_8 = or(_readys_mask_T_5, _readys_mask_T_7) @[generators/rocket-chip/src/main/scala/util/package.scala 253:43]
    node _readys_mask_T_9 = bits(_readys_mask_T_8, 1, 0) @[generators/rocket-chip/src/main/scala/util/package.scala 254:17]
    connect readys_mask_1, _readys_mask_T_9 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 28:12]
  node _readys_T_17 = bits(readys_readys_1, 1, 0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 30:11]
  node _readys_T_18 = bits(_readys_T_17, 0, 0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 68:76]
  node _readys_T_19 = bits(_readys_T_17, 1, 1) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 68:76]
  wire readys_1 : UInt<1>[2] @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 68:27]
  connect readys_1[0], _readys_T_18 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 68:27]
  connect readys_1[1], _readys_T_19 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 68:27]
  node _winner_T_2 = and(readys_1[0], portsAOI_filtered[1].valid) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 71:69]
  node _winner_T_3 = and(readys_1[1], portsAOI_filtered_1[1].valid) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 71:69]
  wire winner_1 : UInt<1>[2] @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 71:27]
  connect winner_1[0], _winner_T_2 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 71:27]
  connect winner_1[1], _winner_T_3 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 71:27]
  node prefixOR_1_1 = or(UInt<1>(0h0), winner_1[0]) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 76:48]
  node _prefixOR_T_1 = or(prefixOR_1_1, winner_1[1]) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 76:48]
  node _T_17 = eq(UInt<1>(0h0), UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:56]
  node _T_18 = eq(winner_1[0], UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:62]
  node _T_19 = or(_T_17, _T_18) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:59]
  node _T_20 = eq(prefixOR_1_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:56]
  node _T_21 = eq(winner_1[1], UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:62]
  node _T_22 = or(_T_20, _T_21) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:59]
  node _T_23 = and(_T_19, _T_22) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:77]
  node _T_24 = asUInt(reset) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
  node _T_25 = eq(_T_24, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
  when _T_25 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
    node _T_26 = eq(_T_23, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
    when _T_26 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
      printf(clock, UInt<1>(0h1), "Assertion failed\n    at Arbiter.scala:77 assert((prefixOR zip winner) map { case (p,w) => !p || !w } reduce {_ && _})\n") : printf_2 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
    assert(clock, _T_23, UInt<1>(0h1), "") : assert_2 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
  node _T_27 = or(portsAOI_filtered[1].valid, portsAOI_filtered_1[1].valid) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:31]
  node _T_28 = eq(_T_27, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:15]
  node _T_29 = or(winner_1[0], winner_1[1]) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:54]
  node _T_30 = or(_T_28, _T_29) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:36]
  node _T_31 = asUInt(reset) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
  node _T_32 = eq(_T_31, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
  when _T_32 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
    node _T_33 = eq(_T_30, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
    when _T_33 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
      printf(clock, UInt<1>(0h1), "Assertion failed\n    at Arbiter.scala:79 assert (!valids.reduce(_||_) || winner.reduce(_||_))\n") : printf_3 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
    assert(clock, _T_30, UInt<1>(0h1), "") : assert_3 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
  node maskedBeats_0_1 = mux(winner_1[0], beatsAI_0, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 82:69]
  node maskedBeats_1_1 = mux(winner_1[1], beatsAI_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 82:69]
  node initBeats_1 = or(maskedBeats_0_1, maskedBeats_1_1) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 84:44]
  node _beatsLeft_T_4 = and(out[1].a.ready, out[1].a.valid) @[src/main/scala/chisel3/util/Decoupled.scala 51:35]
  node _beatsLeft_T_5 = sub(beatsLeft_1, _beatsLeft_T_4) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 85:52]
  node _beatsLeft_T_6 = tail(_beatsLeft_T_5, 1) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 85:52]
  node _beatsLeft_T_7 = mux(latch_1, initBeats_1, _beatsLeft_T_6) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 85:23]
  connect beatsLeft_1, _beatsLeft_T_7 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 85:17]
  wire _state_WIRE_1 : UInt<1>[2] @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 88:34]
  connect _state_WIRE_1[0], UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 88:34]
  connect _state_WIRE_1[1], UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 88:34]
  regreset state_1 : UInt<1>[2], clock, reset, _state_WIRE_1 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 88:26]
  node muxState_1 = mux(idle_1, winner_1, state_1) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 89:25]
  connect state_1, muxState_1 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 90:13]
  node allowed_1 = mux(idle_1, readys_1, state_1) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 92:24]
  node _filtered_1_ready_T = and(out[1].a.ready, allowed_1[0]) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 94:31]
  connect portsAOI_filtered[1].ready, _filtered_1_ready_T @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 94:17]
  node _filtered_1_ready_T_1 = and(out[1].a.ready, allowed_1[1]) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 94:31]
  connect portsAOI_filtered_1[1].ready, _filtered_1_ready_T_1 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 94:17]
  node _out_1_a_valid_T = or(portsAOI_filtered[1].valid, portsAOI_filtered_1[1].valid) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 96:46]
  node _out_1_a_valid_T_1 = mux(state_1[0], portsAOI_filtered[1].valid, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_valid_T_2 = mux(state_1[1], portsAOI_filtered_1[1].valid, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_valid_T_3 = or(_out_1_a_valid_T_1, _out_1_a_valid_T_2) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _out_1_a_valid_WIRE : UInt<1> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_1_a_valid_WIRE, _out_1_a_valid_T_3 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_valid_T_4 = mux(idle_1, _out_1_a_valid_T, _out_1_a_valid_WIRE) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 96:24]
  connect out[1].a.valid, _out_1_a_valid_T_4 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 96:18]
  wire _out_1_a_bits_WIRE : { opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<6>, address : UInt<32>, user : { }, echo : { }, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>} @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_bits_T = mux(muxState_1[0], portsAOI_filtered[1].bits.corrupt, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_bits_T_1 = mux(muxState_1[1], portsAOI_filtered_1[1].bits.corrupt, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_bits_T_2 = or(_out_1_a_bits_T, _out_1_a_bits_T_1) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _out_1_a_bits_WIRE_1 : UInt<1> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_1_a_bits_WIRE_1, _out_1_a_bits_T_2 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_1_a_bits_WIRE.corrupt, _out_1_a_bits_WIRE_1 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_bits_T_3 = mux(muxState_1[0], portsAOI_filtered[1].bits.data, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_bits_T_4 = mux(muxState_1[1], portsAOI_filtered_1[1].bits.data, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_bits_T_5 = or(_out_1_a_bits_T_3, _out_1_a_bits_T_4) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _out_1_a_bits_WIRE_2 : UInt<64> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_1_a_bits_WIRE_2, _out_1_a_bits_T_5 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_1_a_bits_WIRE.data, _out_1_a_bits_WIRE_2 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_bits_T_6 = mux(muxState_1[0], portsAOI_filtered[1].bits.mask, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_bits_T_7 = mux(muxState_1[1], portsAOI_filtered_1[1].bits.mask, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_bits_T_8 = or(_out_1_a_bits_T_6, _out_1_a_bits_T_7) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _out_1_a_bits_WIRE_3 : UInt<8> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_1_a_bits_WIRE_3, _out_1_a_bits_T_8 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_1_a_bits_WIRE.mask, _out_1_a_bits_WIRE_3 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _out_1_a_bits_WIRE_4 : { } @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_1_a_bits_WIRE.echo, _out_1_a_bits_WIRE_4 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _out_1_a_bits_WIRE_5 : { } @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_1_a_bits_WIRE.user, _out_1_a_bits_WIRE_5 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_bits_T_9 = mux(muxState_1[0], portsAOI_filtered[1].bits.address, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_bits_T_10 = mux(muxState_1[1], portsAOI_filtered_1[1].bits.address, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_bits_T_11 = or(_out_1_a_bits_T_9, _out_1_a_bits_T_10) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _out_1_a_bits_WIRE_6 : UInt<32> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_1_a_bits_WIRE_6, _out_1_a_bits_T_11 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_1_a_bits_WIRE.address, _out_1_a_bits_WIRE_6 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_bits_T_12 = mux(muxState_1[0], portsAOI_filtered[1].bits.source, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_bits_T_13 = mux(muxState_1[1], portsAOI_filtered_1[1].bits.source, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_bits_T_14 = or(_out_1_a_bits_T_12, _out_1_a_bits_T_13) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _out_1_a_bits_WIRE_7 : UInt<6> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_1_a_bits_WIRE_7, _out_1_a_bits_T_14 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_1_a_bits_WIRE.source, _out_1_a_bits_WIRE_7 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_bits_T_15 = mux(muxState_1[0], portsAOI_filtered[1].bits.size, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_bits_T_16 = mux(muxState_1[1], portsAOI_filtered_1[1].bits.size, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_bits_T_17 = or(_out_1_a_bits_T_15, _out_1_a_bits_T_16) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _out_1_a_bits_WIRE_8 : UInt<4> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_1_a_bits_WIRE_8, _out_1_a_bits_T_17 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_1_a_bits_WIRE.size, _out_1_a_bits_WIRE_8 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_bits_T_18 = mux(muxState_1[0], portsAOI_filtered[1].bits.param, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_bits_T_19 = mux(muxState_1[1], portsAOI_filtered_1[1].bits.param, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_bits_T_20 = or(_out_1_a_bits_T_18, _out_1_a_bits_T_19) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _out_1_a_bits_WIRE_9 : UInt<3> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_1_a_bits_WIRE_9, _out_1_a_bits_T_20 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_1_a_bits_WIRE.param, _out_1_a_bits_WIRE_9 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_bits_T_21 = mux(muxState_1[0], portsAOI_filtered[1].bits.opcode, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_bits_T_22 = mux(muxState_1[1], portsAOI_filtered_1[1].bits.opcode, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _out_1_a_bits_T_23 = or(_out_1_a_bits_T_21, _out_1_a_bits_T_22) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _out_1_a_bits_WIRE_10 : UInt<3> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_1_a_bits_WIRE_10, _out_1_a_bits_T_23 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _out_1_a_bits_WIRE.opcode, _out_1_a_bits_WIRE_10 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect out[1].a.bits.corrupt, _out_1_a_bits_WIRE.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect out[1].a.bits.data, _out_1_a_bits_WIRE.data @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect out[1].a.bits.mask, _out_1_a_bits_WIRE.mask @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect out[1].a.bits.address, _out_1_a_bits_WIRE.address @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect out[1].a.bits.source, _out_1_a_bits_WIRE.source @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect out[1].a.bits.size, _out_1_a_bits_WIRE.size @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect out[1].a.bits.param, _out_1_a_bits_WIRE.param @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect out[1].a.bits.opcode, _out_1_a_bits_WIRE.opcode @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect out[1].c, portsCOI_filtered_1[1] @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 53:12]
  connect out[1].e, portsEOI_filtered_1[1] @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 53:12]
  connect portsCOI_filtered[1].ready, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 332:73]
  connect portsEOI_filtered[1].ready, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 333:73]
  invalidate in[0].b.bits.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 51:23]
  invalidate in[0].b.bits.data @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 51:23]
  invalidate in[0].b.bits.mask @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 51:23]
  invalidate in[0].b.bits.address @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 51:23]
  invalidate in[0].b.bits.source @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 51:23]
  invalidate in[0].b.bits.size @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 51:23]
  invalidate in[0].b.bits.param @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 51:23]
  invalidate in[0].b.bits.opcode @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 51:23]
  regreset beatsLeft_2 : UInt, clock, reset, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 60:30]
  node idle_2 = eq(beatsLeft_2, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 61:28]
  node latch_2 = and(idle_2, in[0].d.ready) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 62:24]
  node _readys_T_20 = cat(portsDIO_filtered_1[0].valid, portsDIO_filtered[0].valid) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 68:51]
  node readys_valid_2 = bits(_readys_T_20, 1, 0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 21:23]
  node _readys_T_21 = eq(readys_valid_2, _readys_T_20) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:19]
  node _readys_T_22 = asUInt(reset) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
  node _readys_T_23 = eq(_readys_T_22, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
  when _readys_T_23 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
    node _readys_T_24 = eq(_readys_T_21, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
    when _readys_T_24 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
      printf(clock, UInt<1>(0h1), "Assertion failed\n    at Arbiter.scala:22 assert (valid === valids)\n") : readys_printf_2 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
    assert(clock, _readys_T_21, UInt<1>(0h1), "") : readys_assert_2 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
  regreset readys_mask_2 : UInt<2>, clock, reset, UInt<2>(0h3) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 23:23]
  node _readys_filter_T_4 = not(readys_mask_2) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 24:30]
  node _readys_filter_T_5 = and(readys_valid_2, _readys_filter_T_4) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 24:28]
  node readys_filter_2 = cat(_readys_filter_T_5, readys_valid_2) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 24:21]
  node _readys_unready_T_10 = shr(readys_filter_2, 1) @[generators/rocket-chip/src/main/scala/util/package.scala 262:48]
  node _readys_unready_T_11 = or(readys_filter_2, _readys_unready_T_10) @[generators/rocket-chip/src/main/scala/util/package.scala 262:43]
  node _readys_unready_T_12 = bits(_readys_unready_T_11, 3, 0) @[generators/rocket-chip/src/main/scala/util/package.scala 263:17]
  node _readys_unready_T_13 = shr(_readys_unready_T_12, 1) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 25:52]
  node _readys_unready_T_14 = shl(readys_mask_2, 2) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 25:66]
  node readys_unready_2 = or(_readys_unready_T_13, _readys_unready_T_14) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 25:58]
  node _readys_readys_T_6 = shr(readys_unready_2, 2) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 26:29]
  node _readys_readys_T_7 = bits(readys_unready_2, 1, 0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 26:48]
  node _readys_readys_T_8 = and(_readys_readys_T_6, _readys_readys_T_7) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 26:39]
  node readys_readys_2 = not(_readys_readys_T_8) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 26:18]
  node _readys_T_25 = orr(readys_valid_2) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 27:27]
  node _readys_T_26 = and(latch_2, _readys_T_25) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 27:18]
  when _readys_T_26 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 27:32]
    node _readys_mask_T_10 = and(readys_readys_2, readys_valid_2) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 28:29]
    node _readys_mask_T_11 = shl(_readys_mask_T_10, 1) @[generators/rocket-chip/src/main/scala/util/package.scala 253:48]
    node _readys_mask_T_12 = bits(_readys_mask_T_11, 1, 0) @[generators/rocket-chip/src/main/scala/util/package.scala 253:53]
    node _readys_mask_T_13 = or(_readys_mask_T_10, _readys_mask_T_12) @[generators/rocket-chip/src/main/scala/util/package.scala 253:43]
    node _readys_mask_T_14 = bits(_readys_mask_T_13, 1, 0) @[generators/rocket-chip/src/main/scala/util/package.scala 254:17]
    connect readys_mask_2, _readys_mask_T_14 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 28:12]
  node _readys_T_27 = bits(readys_readys_2, 1, 0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 30:11]
  node _readys_T_28 = bits(_readys_T_27, 0, 0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 68:76]
  node _readys_T_29 = bits(_readys_T_27, 1, 1) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 68:76]
  wire readys_2 : UInt<1>[2] @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 68:27]
  connect readys_2[0], _readys_T_28 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 68:27]
  connect readys_2[1], _readys_T_29 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 68:27]
  node _winner_T_4 = and(readys_2[0], portsDIO_filtered[0].valid) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 71:69]
  node _winner_T_5 = and(readys_2[1], portsDIO_filtered_1[0].valid) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 71:69]
  wire winner_2 : UInt<1>[2] @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 71:27]
  connect winner_2[0], _winner_T_4 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 71:27]
  connect winner_2[1], _winner_T_5 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 71:27]
  node prefixOR_1_2 = or(UInt<1>(0h0), winner_2[0]) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 76:48]
  node _prefixOR_T_2 = or(prefixOR_1_2, winner_2[1]) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 76:48]
  node _T_34 = eq(UInt<1>(0h0), UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:56]
  node _T_35 = eq(winner_2[0], UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:62]
  node _T_36 = or(_T_34, _T_35) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:59]
  node _T_37 = eq(prefixOR_1_2, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:56]
  node _T_38 = eq(winner_2[1], UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:62]
  node _T_39 = or(_T_37, _T_38) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:59]
  node _T_40 = and(_T_36, _T_39) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:77]
  node _T_41 = asUInt(reset) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
  node _T_42 = eq(_T_41, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
  when _T_42 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
    node _T_43 = eq(_T_40, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
    when _T_43 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
      printf(clock, UInt<1>(0h1), "Assertion failed\n    at Arbiter.scala:77 assert((prefixOR zip winner) map { case (p,w) => !p || !w } reduce {_ && _})\n") : printf_4 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
    assert(clock, _T_40, UInt<1>(0h1), "") : assert_4 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
  node _T_44 = or(portsDIO_filtered[0].valid, portsDIO_filtered_1[0].valid) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:31]
  node _T_45 = eq(_T_44, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:15]
  node _T_46 = or(winner_2[0], winner_2[1]) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:54]
  node _T_47 = or(_T_45, _T_46) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:36]
  node _T_48 = asUInt(reset) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
  node _T_49 = eq(_T_48, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
  when _T_49 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
    node _T_50 = eq(_T_47, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
    when _T_50 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
      printf(clock, UInt<1>(0h1), "Assertion failed\n    at Arbiter.scala:79 assert (!valids.reduce(_||_) || winner.reduce(_||_))\n") : printf_5 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
    assert(clock, _T_47, UInt<1>(0h1), "") : assert_5 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
  node maskedBeats_0_2 = mux(winner_2[0], beatsDO_0, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 82:69]
  node maskedBeats_1_2 = mux(winner_2[1], beatsDO_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 82:69]
  node initBeats_2 = or(maskedBeats_0_2, maskedBeats_1_2) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 84:44]
  node _beatsLeft_T_8 = and(in[0].d.ready, in[0].d.valid) @[src/main/scala/chisel3/util/Decoupled.scala 51:35]
  node _beatsLeft_T_9 = sub(beatsLeft_2, _beatsLeft_T_8) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 85:52]
  node _beatsLeft_T_10 = tail(_beatsLeft_T_9, 1) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 85:52]
  node _beatsLeft_T_11 = mux(latch_2, initBeats_2, _beatsLeft_T_10) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 85:23]
  connect beatsLeft_2, _beatsLeft_T_11 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 85:17]
  wire _state_WIRE_2 : UInt<1>[2] @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 88:34]
  connect _state_WIRE_2[0], UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 88:34]
  connect _state_WIRE_2[1], UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 88:34]
  regreset state_2 : UInt<1>[2], clock, reset, _state_WIRE_2 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 88:26]
  node muxState_2 = mux(idle_2, winner_2, state_2) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 89:25]
  connect state_2, muxState_2 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 90:13]
  node allowed_2 = mux(idle_2, readys_2, state_2) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 92:24]
  node _filtered_0_ready_T_2 = and(in[0].d.ready, allowed_2[0]) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 94:31]
  connect portsDIO_filtered[0].ready, _filtered_0_ready_T_2 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 94:17]
  node _filtered_0_ready_T_3 = and(in[0].d.ready, allowed_2[1]) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 94:31]
  connect portsDIO_filtered_1[0].ready, _filtered_0_ready_T_3 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 94:17]
  node _in_0_d_valid_T = or(portsDIO_filtered[0].valid, portsDIO_filtered_1[0].valid) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 96:46]
  node _in_0_d_valid_T_1 = mux(state_2[0], portsDIO_filtered[0].valid, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_valid_T_2 = mux(state_2[1], portsDIO_filtered_1[0].valid, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_valid_T_3 = or(_in_0_d_valid_T_1, _in_0_d_valid_T_2) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _in_0_d_valid_WIRE : UInt<1> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_0_d_valid_WIRE, _in_0_d_valid_T_3 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_valid_T_4 = mux(idle_2, _in_0_d_valid_T, _in_0_d_valid_WIRE) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 96:24]
  connect in[0].d.valid, _in_0_d_valid_T_4 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 96:18]
  wire _in_0_d_bits_WIRE : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<6>, sink : UInt<3>, denied : UInt<1>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>} @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_bits_T = mux(muxState_2[0], portsDIO_filtered[0].bits.corrupt, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_bits_T_1 = mux(muxState_2[1], portsDIO_filtered_1[0].bits.corrupt, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_bits_T_2 = or(_in_0_d_bits_T, _in_0_d_bits_T_1) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _in_0_d_bits_WIRE_1 : UInt<1> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_0_d_bits_WIRE_1, _in_0_d_bits_T_2 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_0_d_bits_WIRE.corrupt, _in_0_d_bits_WIRE_1 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_bits_T_3 = mux(muxState_2[0], portsDIO_filtered[0].bits.data, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_bits_T_4 = mux(muxState_2[1], portsDIO_filtered_1[0].bits.data, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_bits_T_5 = or(_in_0_d_bits_T_3, _in_0_d_bits_T_4) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _in_0_d_bits_WIRE_2 : UInt<64> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_0_d_bits_WIRE_2, _in_0_d_bits_T_5 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_0_d_bits_WIRE.data, _in_0_d_bits_WIRE_2 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _in_0_d_bits_WIRE_3 : { } @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_0_d_bits_WIRE.echo, _in_0_d_bits_WIRE_3 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _in_0_d_bits_WIRE_4 : { } @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_0_d_bits_WIRE.user, _in_0_d_bits_WIRE_4 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_bits_T_6 = mux(muxState_2[0], portsDIO_filtered[0].bits.denied, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_bits_T_7 = mux(muxState_2[1], portsDIO_filtered_1[0].bits.denied, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_bits_T_8 = or(_in_0_d_bits_T_6, _in_0_d_bits_T_7) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _in_0_d_bits_WIRE_5 : UInt<1> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_0_d_bits_WIRE_5, _in_0_d_bits_T_8 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_0_d_bits_WIRE.denied, _in_0_d_bits_WIRE_5 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_bits_T_9 = mux(muxState_2[0], portsDIO_filtered[0].bits.sink, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_bits_T_10 = mux(muxState_2[1], portsDIO_filtered_1[0].bits.sink, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_bits_T_11 = or(_in_0_d_bits_T_9, _in_0_d_bits_T_10) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _in_0_d_bits_WIRE_6 : UInt<3> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_0_d_bits_WIRE_6, _in_0_d_bits_T_11 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_0_d_bits_WIRE.sink, _in_0_d_bits_WIRE_6 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_bits_T_12 = mux(muxState_2[0], portsDIO_filtered[0].bits.source, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_bits_T_13 = mux(muxState_2[1], portsDIO_filtered_1[0].bits.source, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_bits_T_14 = or(_in_0_d_bits_T_12, _in_0_d_bits_T_13) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _in_0_d_bits_WIRE_7 : UInt<6> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_0_d_bits_WIRE_7, _in_0_d_bits_T_14 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_0_d_bits_WIRE.source, _in_0_d_bits_WIRE_7 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_bits_T_15 = mux(muxState_2[0], portsDIO_filtered[0].bits.size, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_bits_T_16 = mux(muxState_2[1], portsDIO_filtered_1[0].bits.size, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_bits_T_17 = or(_in_0_d_bits_T_15, _in_0_d_bits_T_16) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _in_0_d_bits_WIRE_8 : UInt<4> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_0_d_bits_WIRE_8, _in_0_d_bits_T_17 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_0_d_bits_WIRE.size, _in_0_d_bits_WIRE_8 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_bits_T_18 = mux(muxState_2[0], portsDIO_filtered[0].bits.param, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_bits_T_19 = mux(muxState_2[1], portsDIO_filtered_1[0].bits.param, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_bits_T_20 = or(_in_0_d_bits_T_18, _in_0_d_bits_T_19) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _in_0_d_bits_WIRE_9 : UInt<2> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_0_d_bits_WIRE_9, _in_0_d_bits_T_20 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_0_d_bits_WIRE.param, _in_0_d_bits_WIRE_9 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_bits_T_21 = mux(muxState_2[0], portsDIO_filtered[0].bits.opcode, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_bits_T_22 = mux(muxState_2[1], portsDIO_filtered_1[0].bits.opcode, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_0_d_bits_T_23 = or(_in_0_d_bits_T_21, _in_0_d_bits_T_22) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _in_0_d_bits_WIRE_10 : UInt<3> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_0_d_bits_WIRE_10, _in_0_d_bits_T_23 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_0_d_bits_WIRE.opcode, _in_0_d_bits_WIRE_10 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect in[0].d.bits.corrupt, _in_0_d_bits_WIRE.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect in[0].d.bits.data, _in_0_d_bits_WIRE.data @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect in[0].d.bits.denied, _in_0_d_bits_WIRE.denied @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect in[0].d.bits.sink, _in_0_d_bits_WIRE.sink @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect in[0].d.bits.source, _in_0_d_bits_WIRE.source @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect in[0].d.bits.size, _in_0_d_bits_WIRE.size @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect in[0].d.bits.param, _in_0_d_bits_WIRE.param @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect in[0].d.bits.opcode, _in_0_d_bits_WIRE.opcode @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect portsBIO_filtered[0].ready, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 339:73]
  connect portsBIO_filtered_1[0].ready, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 339:73]
  connect in[1].b, portsBIO_filtered_1[1] @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 53:12]
  regreset beatsLeft_3 : UInt, clock, reset, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 60:30]
  node idle_3 = eq(beatsLeft_3, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 61:28]
  node latch_3 = and(idle_3, in[1].d.ready) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 62:24]
  node _readys_T_30 = cat(portsDIO_filtered_1[1].valid, portsDIO_filtered[1].valid) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 68:51]
  node readys_valid_3 = bits(_readys_T_30, 1, 0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 21:23]
  node _readys_T_31 = eq(readys_valid_3, _readys_T_30) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:19]
  node _readys_T_32 = asUInt(reset) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
  node _readys_T_33 = eq(_readys_T_32, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
  when _readys_T_33 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
    node _readys_T_34 = eq(_readys_T_31, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
    when _readys_T_34 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
      printf(clock, UInt<1>(0h1), "Assertion failed\n    at Arbiter.scala:22 assert (valid === valids)\n") : readys_printf_3 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
    assert(clock, _readys_T_31, UInt<1>(0h1), "") : readys_assert_3 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 22:12]
  regreset readys_mask_3 : UInt<2>, clock, reset, UInt<2>(0h3) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 23:23]
  node _readys_filter_T_6 = not(readys_mask_3) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 24:30]
  node _readys_filter_T_7 = and(readys_valid_3, _readys_filter_T_6) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 24:28]
  node readys_filter_3 = cat(_readys_filter_T_7, readys_valid_3) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 24:21]
  node _readys_unready_T_15 = shr(readys_filter_3, 1) @[generators/rocket-chip/src/main/scala/util/package.scala 262:48]
  node _readys_unready_T_16 = or(readys_filter_3, _readys_unready_T_15) @[generators/rocket-chip/src/main/scala/util/package.scala 262:43]
  node _readys_unready_T_17 = bits(_readys_unready_T_16, 3, 0) @[generators/rocket-chip/src/main/scala/util/package.scala 263:17]
  node _readys_unready_T_18 = shr(_readys_unready_T_17, 1) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 25:52]
  node _readys_unready_T_19 = shl(readys_mask_3, 2) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 25:66]
  node readys_unready_3 = or(_readys_unready_T_18, _readys_unready_T_19) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 25:58]
  node _readys_readys_T_9 = shr(readys_unready_3, 2) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 26:29]
  node _readys_readys_T_10 = bits(readys_unready_3, 1, 0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 26:48]
  node _readys_readys_T_11 = and(_readys_readys_T_9, _readys_readys_T_10) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 26:39]
  node readys_readys_3 = not(_readys_readys_T_11) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 26:18]
  node _readys_T_35 = orr(readys_valid_3) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 27:27]
  node _readys_T_36 = and(latch_3, _readys_T_35) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 27:18]
  when _readys_T_36 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 27:32]
    node _readys_mask_T_15 = and(readys_readys_3, readys_valid_3) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 28:29]
    node _readys_mask_T_16 = shl(_readys_mask_T_15, 1) @[generators/rocket-chip/src/main/scala/util/package.scala 253:48]
    node _readys_mask_T_17 = bits(_readys_mask_T_16, 1, 0) @[generators/rocket-chip/src/main/scala/util/package.scala 253:53]
    node _readys_mask_T_18 = or(_readys_mask_T_15, _readys_mask_T_17) @[generators/rocket-chip/src/main/scala/util/package.scala 253:43]
    node _readys_mask_T_19 = bits(_readys_mask_T_18, 1, 0) @[generators/rocket-chip/src/main/scala/util/package.scala 254:17]
    connect readys_mask_3, _readys_mask_T_19 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 28:12]
  node _readys_T_37 = bits(readys_readys_3, 1, 0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 30:11]
  node _readys_T_38 = bits(_readys_T_37, 0, 0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 68:76]
  node _readys_T_39 = bits(_readys_T_37, 1, 1) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 68:76]
  wire readys_3 : UInt<1>[2] @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 68:27]
  connect readys_3[0], _readys_T_38 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 68:27]
  connect readys_3[1], _readys_T_39 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 68:27]
  node _winner_T_6 = and(readys_3[0], portsDIO_filtered[1].valid) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 71:69]
  node _winner_T_7 = and(readys_3[1], portsDIO_filtered_1[1].valid) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 71:69]
  wire winner_3 : UInt<1>[2] @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 71:27]
  connect winner_3[0], _winner_T_6 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 71:27]
  connect winner_3[1], _winner_T_7 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 71:27]
  node prefixOR_1_3 = or(UInt<1>(0h0), winner_3[0]) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 76:48]
  node _prefixOR_T_3 = or(prefixOR_1_3, winner_3[1]) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 76:48]
  node _T_51 = eq(UInt<1>(0h0), UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:56]
  node _T_52 = eq(winner_3[0], UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:62]
  node _T_53 = or(_T_51, _T_52) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:59]
  node _T_54 = eq(prefixOR_1_3, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:56]
  node _T_55 = eq(winner_3[1], UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:62]
  node _T_56 = or(_T_54, _T_55) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:59]
  node _T_57 = and(_T_53, _T_56) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:77]
  node _T_58 = asUInt(reset) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
  node _T_59 = eq(_T_58, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
  when _T_59 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
    node _T_60 = eq(_T_57, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
    when _T_60 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
      printf(clock, UInt<1>(0h1), "Assertion failed\n    at Arbiter.scala:77 assert((prefixOR zip winner) map { case (p,w) => !p || !w } reduce {_ && _})\n") : printf_6 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
    assert(clock, _T_57, UInt<1>(0h1), "") : assert_6 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 77:13]
  node _T_61 = or(portsDIO_filtered[1].valid, portsDIO_filtered_1[1].valid) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:31]
  node _T_62 = eq(_T_61, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:15]
  node _T_63 = or(winner_3[0], winner_3[1]) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:54]
  node _T_64 = or(_T_62, _T_63) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:36]
  node _T_65 = asUInt(reset) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
  node _T_66 = eq(_T_65, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
  when _T_66 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
    node _T_67 = eq(_T_64, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
    when _T_67 : @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
      printf(clock, UInt<1>(0h1), "Assertion failed\n    at Arbiter.scala:79 assert (!valids.reduce(_||_) || winner.reduce(_||_))\n") : printf_7 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
    assert(clock, _T_64, UInt<1>(0h1), "") : assert_7 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 79:14]
  node maskedBeats_0_3 = mux(winner_3[0], beatsDO_0, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 82:69]
  node maskedBeats_1_3 = mux(winner_3[1], beatsDO_1, UInt<1>(0h0)) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 82:69]
  node initBeats_3 = or(maskedBeats_0_3, maskedBeats_1_3) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 84:44]
  node _beatsLeft_T_12 = and(in[1].d.ready, in[1].d.valid) @[src/main/scala/chisel3/util/Decoupled.scala 51:35]
  node _beatsLeft_T_13 = sub(beatsLeft_3, _beatsLeft_T_12) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 85:52]
  node _beatsLeft_T_14 = tail(_beatsLeft_T_13, 1) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 85:52]
  node _beatsLeft_T_15 = mux(latch_3, initBeats_3, _beatsLeft_T_14) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 85:23]
  connect beatsLeft_3, _beatsLeft_T_15 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 85:17]
  wire _state_WIRE_3 : UInt<1>[2] @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 88:34]
  connect _state_WIRE_3[0], UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 88:34]
  connect _state_WIRE_3[1], UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 88:34]
  regreset state_3 : UInt<1>[2], clock, reset, _state_WIRE_3 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 88:26]
  node muxState_3 = mux(idle_3, winner_3, state_3) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 89:25]
  connect state_3, muxState_3 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 90:13]
  node allowed_3 = mux(idle_3, readys_3, state_3) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 92:24]
  node _filtered_1_ready_T_2 = and(in[1].d.ready, allowed_3[0]) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 94:31]
  connect portsDIO_filtered[1].ready, _filtered_1_ready_T_2 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 94:17]
  node _filtered_1_ready_T_3 = and(in[1].d.ready, allowed_3[1]) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 94:31]
  connect portsDIO_filtered_1[1].ready, _filtered_1_ready_T_3 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 94:17]
  node _in_1_d_valid_T = or(portsDIO_filtered[1].valid, portsDIO_filtered_1[1].valid) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 96:46]
  node _in_1_d_valid_T_1 = mux(state_3[0], portsDIO_filtered[1].valid, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_valid_T_2 = mux(state_3[1], portsDIO_filtered_1[1].valid, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_valid_T_3 = or(_in_1_d_valid_T_1, _in_1_d_valid_T_2) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _in_1_d_valid_WIRE : UInt<1> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_1_d_valid_WIRE, _in_1_d_valid_T_3 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_valid_T_4 = mux(idle_3, _in_1_d_valid_T, _in_1_d_valid_WIRE) @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 96:24]
  connect in[1].d.valid, _in_1_d_valid_T_4 @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 96:18]
  wire _in_1_d_bits_WIRE : { opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<6>, sink : UInt<3>, denied : UInt<1>, user : { }, echo : { }, data : UInt<64>, corrupt : UInt<1>} @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_bits_T = mux(muxState_3[0], portsDIO_filtered[1].bits.corrupt, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_bits_T_1 = mux(muxState_3[1], portsDIO_filtered_1[1].bits.corrupt, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_bits_T_2 = or(_in_1_d_bits_T, _in_1_d_bits_T_1) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _in_1_d_bits_WIRE_1 : UInt<1> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_1_d_bits_WIRE_1, _in_1_d_bits_T_2 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_1_d_bits_WIRE.corrupt, _in_1_d_bits_WIRE_1 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_bits_T_3 = mux(muxState_3[0], portsDIO_filtered[1].bits.data, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_bits_T_4 = mux(muxState_3[1], portsDIO_filtered_1[1].bits.data, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_bits_T_5 = or(_in_1_d_bits_T_3, _in_1_d_bits_T_4) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _in_1_d_bits_WIRE_2 : UInt<64> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_1_d_bits_WIRE_2, _in_1_d_bits_T_5 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_1_d_bits_WIRE.data, _in_1_d_bits_WIRE_2 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _in_1_d_bits_WIRE_3 : { } @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_1_d_bits_WIRE.echo, _in_1_d_bits_WIRE_3 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _in_1_d_bits_WIRE_4 : { } @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_1_d_bits_WIRE.user, _in_1_d_bits_WIRE_4 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_bits_T_6 = mux(muxState_3[0], portsDIO_filtered[1].bits.denied, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_bits_T_7 = mux(muxState_3[1], portsDIO_filtered_1[1].bits.denied, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_bits_T_8 = or(_in_1_d_bits_T_6, _in_1_d_bits_T_7) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _in_1_d_bits_WIRE_5 : UInt<1> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_1_d_bits_WIRE_5, _in_1_d_bits_T_8 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_1_d_bits_WIRE.denied, _in_1_d_bits_WIRE_5 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_bits_T_9 = mux(muxState_3[0], portsDIO_filtered[1].bits.sink, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_bits_T_10 = mux(muxState_3[1], portsDIO_filtered_1[1].bits.sink, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_bits_T_11 = or(_in_1_d_bits_T_9, _in_1_d_bits_T_10) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _in_1_d_bits_WIRE_6 : UInt<3> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_1_d_bits_WIRE_6, _in_1_d_bits_T_11 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_1_d_bits_WIRE.sink, _in_1_d_bits_WIRE_6 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_bits_T_12 = mux(muxState_3[0], portsDIO_filtered[1].bits.source, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_bits_T_13 = mux(muxState_3[1], portsDIO_filtered_1[1].bits.source, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_bits_T_14 = or(_in_1_d_bits_T_12, _in_1_d_bits_T_13) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _in_1_d_bits_WIRE_7 : UInt<6> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_1_d_bits_WIRE_7, _in_1_d_bits_T_14 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_1_d_bits_WIRE.source, _in_1_d_bits_WIRE_7 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_bits_T_15 = mux(muxState_3[0], portsDIO_filtered[1].bits.size, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_bits_T_16 = mux(muxState_3[1], portsDIO_filtered_1[1].bits.size, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_bits_T_17 = or(_in_1_d_bits_T_15, _in_1_d_bits_T_16) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _in_1_d_bits_WIRE_8 : UInt<4> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_1_d_bits_WIRE_8, _in_1_d_bits_T_17 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_1_d_bits_WIRE.size, _in_1_d_bits_WIRE_8 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_bits_T_18 = mux(muxState_3[0], portsDIO_filtered[1].bits.param, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_bits_T_19 = mux(muxState_3[1], portsDIO_filtered_1[1].bits.param, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_bits_T_20 = or(_in_1_d_bits_T_18, _in_1_d_bits_T_19) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _in_1_d_bits_WIRE_9 : UInt<2> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_1_d_bits_WIRE_9, _in_1_d_bits_T_20 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_1_d_bits_WIRE.param, _in_1_d_bits_WIRE_9 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_bits_T_21 = mux(muxState_3[0], portsDIO_filtered[1].bits.opcode, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_bits_T_22 = mux(muxState_3[1], portsDIO_filtered_1[1].bits.opcode, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  node _in_1_d_bits_T_23 = or(_in_1_d_bits_T_21, _in_1_d_bits_T_22) @[src/main/scala/chisel3/util/Mux.scala 30:73]
  wire _in_1_d_bits_WIRE_10 : UInt<3> @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_1_d_bits_WIRE_10, _in_1_d_bits_T_23 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect _in_1_d_bits_WIRE.opcode, _in_1_d_bits_WIRE_10 @[src/main/scala/chisel3/util/Mux.scala 30:73]
  connect in[1].d.bits.corrupt, _in_1_d_bits_WIRE.corrupt @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect in[1].d.bits.data, _in_1_d_bits_WIRE.data @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect in[1].d.bits.denied, _in_1_d_bits_WIRE.denied @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect in[1].d.bits.sink, _in_1_d_bits_WIRE.sink @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect in[1].d.bits.source, _in_1_d_bits_WIRE.source @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect in[1].d.bits.size, _in_1_d_bits_WIRE.size @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect in[1].d.bits.param, _in_1_d_bits_WIRE.param @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect in[1].d.bits.opcode, _in_1_d_bits_WIRE.opcode @[generators/rocket-chip/src/main/scala/tilelink/Arbiter.scala 97:17]
  connect portsBIO_filtered[1].ready, UInt<1>(0h0) @[generators/rocket-chip/src/main/scala/tilelink/Xbar.scala 339:73]
"#;

// let source =
// r#"node _source_ok_uncommonBits_T = or(io.in.a.bits.source, UInt<2>(0h0)) @[generators/rocket-chip/src/main/scala/diplomacy/Parameters.scala 52:29]"#;

// let mut lexer_print = FIRRTLLexer::new(&source);
// while let Some(ts) = lexer_print.next_token() {
// println!("{:?}", ts);
// match ts.token {
// Token::Error => {
// println!("{:?}", ts);
// panic!("Got a error token");
// }
// _ => { }
// }
// }

    let lexer = FIRRTLLexer::new(&source);
    let parser = ModuleParser::new();
    let ast = parser.parse(lexer).expect("FAILED");
    println!("{:?}", ast);
}

#[test]
fn rocketconfig() -> Result<(), std::io::Error> {
    let source = std::fs::read_to_string("./test-inputs/chipyard.harness.TestHarness.RocketConfig.fir")?;
    let lexer = FIRRTLLexer::new(&source);
    let parser = CircuitParser::new();
    let ast = parser.parse(lexer).expect("FAILED");
// println!("{:?}", ast);
    Ok(())
}
}
